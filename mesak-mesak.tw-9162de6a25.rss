<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:googleplay="http://www.google.com/schemas/play-podcasts/1.0" xmlns:media="http://www.rssboard.org/media-rss" version="2.0">
  <channel>
    <title><![CDATA[米薩克 聊 3C[RSS+]]]></title>
    <link>https://mesak.tw/feed</link>
    <image>
      <url>https://mesak.tw/wp-content/uploads/2014/03/navbar-logo-big.png</url>
      <title>米薩克 聊 3C[RSS+]</title>
      <link>https://mesak.tw/feed</link>
    </image>
    <language>zh-TW</language>
    <atom:link href="https://mesak.tw/feed" rel="self" type="application/rss+xml"/>
    <copyright><![CDATA[米薩克 聊 3C[RSS+]]]></copyright>
    <itunes:author><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[
      Mesak 敗家、筆記、生活<br />
<br />
<a href="https://mesak.tw/feed" target="_blank">https://mesak.tw/feed</a>
      ]]>
    </itunes:summary>
    <description>
      <![CDATA[
      Mesak 敗家、筆記、生活<br />
<br />
<a href="https://mesak.tw/feed" target="_blank">https://mesak.tw/feed</a>
      ]]>
    </description>
    <itunes:owner>
      <itunes:name><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:name>
    </itunes:owner>
    <itunes:image href="https://mesak.tw/wp-content/uploads/2014/03/navbar-logo-big.png"/>
<item>
    <title><![CDATA[[程式] Vibe Coding 實作小專案  LinkEveryWord]]></title>
    <link>https://mesak.tw/code/12129/vibe-coding-into-linkeveryword</link>
    <itunes:title><![CDATA[[程式] Vibe Coding 實作小專案  LinkEveryWord]]></itunes:title>
    <itunes:author><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[<div><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f17e11e9d5.jpg"><p>前陣子收到了 Github Copilot 的年繳帳單，突然想到最近好像很少用它做了什麼功能，現在 AI Agent 大爆發，任何開發都入門都簡易化了。</p><p>於是就想著用 AI Vibe Coing 一下，開始盤點之前有做那些想一半就放棄的功能。</p><p>於是就先跑了這個 <a href="https://linkeveryword.wiz.tw">LinkEveryWord</a> ，這功能的主體就是 我想在瀏覽網頁的時候，快速查到我電腦裡面的資料，這樣我比較追蹤這東西我到底抓了沒，或是是否有沒有這個檔案的存在，需求很小眾，但是實作起來很難。</p><h2>為何有這個需求，限制又是哪些</h2><p>對一個有數位囤物症的我來說，在電腦裡面下載或是安裝一些東西都算是稀鬆平常的事情，電腦常常又會堆積著大量用不到的檔案或是已經抓過的重複檔案。這點對我來說相當的困擾。如果我在手殘要下載之前可以快速比對一下電腦裡面有沒有安裝或是下載，這樣可以阻擋我點下去下載的需求。</p><p>由於電腦規則的設計，當你用瀏覽器的時候，大部分情況下瀏覽器是讀取不到你電腦內的檔案的，所以需要 Chrome 擴充元件跟其他應用程式的溝通才有辦法在瀏覽器中呈現你要的資料</p><p>以下是開發的碎念，安裝跟使用方式介紹可以跳到 #安裝 環節</p><h2>開工準備</h2><p>有了明確的需求，要開工就會很快。這次為了試驗各個 AI 的實力，我大概聽過的 AI 都稍微碰了一下，最後我只挑幾個常用的來說明。</p><p>我在很久以前就知道我用的一款 Windows 應用程式 <a href="https://www.voidtools.com/">Everything</a> 可以快速地找到我要的檔案，該應用程式也推出了一個<a href="https://www.voidtools.com/zh-cn/support/everything/sdk/">串接的 SDK</a>可以參考。我首先用 GitHub Copilot 直接丟網址給 AGENT 閱讀，並跟我確認規劃功能。</p><p>可能這個對 AI 來說真的算小 CASE，結果 AGENT 一邊規劃一邊把功能給實作完畢。我看功能沒太大問題，就直接把專案切成 Monorepo 的形式分了三個目錄存取，結果這樣的規劃讓我後續的功能部屬一直受到阻礙。</p><p>接著，我利用 AI 產生我的需求，之後用 gemini cli 直接讀取需求，針對另外兩個目錄寫出 README.md，以便我查閱後續的需求跟目的開發。本來是想先規劃再開工，沒想到最小 POC 直接實現，所以後面就根據這個 POC 延伸寫完需求內容一次開發。</p><h3>Chrome 套件開發</h3><p>雖然這個已經有不少經驗，不過距離我最近一次發布的 Chrome 擴充套件已經是十年前了。近期開發的功能則是停滯的狀態，這個需求比較簡單，我需要往本地端呼叫一個 AJAX 查詢，讓使用者可以設定項目。因此我直接使用 GitHub Copilot 開發，建立 plasmo + shadcn，並根據我的需求產出內容、閱讀頁和設定頁，還有快捷鍵註冊，這大概幾小時就搞定了。最多的時間還是微調跟桌面應用程式的串接格式定案。</p><p>因為怕 Chrome 審核太久，我直接打包一版手動上架審核。審核需求的內容，我叫 gemini cli 讀取我的 README 跟設計檔案，把 Chrome 要審核的內容直接生成。至於為什麼使用 gemini 產出，因為只有 Google 最懂 Google XD。</p><p>審核大概花了兩天就 PASS 了。在這兩天期間，我又用了 GitHub Copilot 根據 Cloudflare Pages 的規則，產出 Hono 的網站設計，並設計簡單的部屬，產生 Chrome 所需要的權限政策網址（我後來才看到有網友直接用 GitHub 倉庫的 md 產生，萬萬沒想到）。</p><h3>自動發布策略 (CICD)</h3><p>應用程式、Chrome 套件和介紹網站都好了，接下來最難搞的就是自動發布策略 (CICD)。這幾天上班，我直接開啟 <a href="https://jules.google/">Google Jules</a> 幫我把各個 README 根據已經實現的功能重新發布，一共微調了四五次，接著請它根據我的專案架構擬定一個 CICD 的發布流程。在此期間，我詢問過每日免費的 GPT-5 跟 gemini chat 擬定策略，確定好後再給 Jules。否則他思考很慢還需要多次確認。</p><p>應用程式大約排除掉路徑跟打包的檔案內容，測試個四五次就可以搞定。最麻煩的是 Chrome。我原本是想，我以後的桌面應用程式更新，線上WEB也直接更新版號跟更新進度內容，Chrome 擴充元件亦然，但要實作之後才想到 Chrome 發布需要審核。結果我將過程改為 Chrome 變更內容增加版號才自動上 Tag 推版，首先針對桌面應用程式完成，再分資料夾。</p><p>最開始的 Agent 在增加 gitignore 的時候不小心將 lib/、lib64/ 都加進去了，導致套件發送版本打包一直失敗，一般的 Agent 在測試時根本測不出差異，本地端 act 測試也都是正常的。後來用 GitHub Copilot 的 GPT-5 模型來全掃描，才抓到這個問題。最終，配置對應的 <a href="https://github.com/fregante/chrome-webstore-upload-keys">Google OAuth</a>版本授權和 KEY，成功上傳了。</p><h2>安裝說明</h2><p>首先到商店安裝 <a href="https://chromewebstore.google.com/detail/linkeveryword-extension/lkpkimhpldonggkkcoidicbeembcpemj?hl=zh">Chrome 套件</a> ，安裝完畢之後 設定-&gt;LinkEveryWord&nbsp;詳細資料-&gt;擴充功能選項</p><p>在設定的地方，可以設定其他網址，方便未來其他應用程式的擴充，這邊直接 “開啟Chrome快捷鍵設定頁面” ，找到 LinkEveryWord&nbsp;，看到 “Open LinkEveryWord search panel” 框框，按下筆形圖案錄入你想紀錄的快捷鍵，這樣就可以使用這個快捷鍵呼叫 右側結果區塊</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-8cdeeded5c.jpg"><p>接著還要 應用程式的配合，到<a href="https://github.com/mesak/LinkEveryWord/releases"> github page </a>的 releases 清單，抓取最新的 zip ，下載下來解壓縮，執行 EverythingFlaskSearch.exe，就會自動叫出瀏覽器開啟搜尋的臨時網頁</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a5e5825cb5.jpg"><p>這個東西等同是 Everything 的本地端網頁版，當然你如果自已會部屬的話也可以把家裡電腦架設主機配置遠端IP ，在公司搜尋家裡的檔案 ( 但是不能看) 這算是額外自己配置的功能，如果想要開機自動啟動可以用 NSSM 或是 ServiceEx ，這兩種都可以自動開機啟動。</p><p>到現在啟動並配置完成，功能就完畢了。</p><h2>結語</h2><p>目前這個小專案算是我一個實驗 Vibe 到底可以做到那些事情的一個小過程</p><p>這個專案我用了 微軟的 Microsoft Copilot 幫我產生 Logo，用線上的影像工具幫我放個首圖，應用程式的 ICON 用了 <a href="https://www.xiconeditor.com/">X-ICONEDITOR </a>把 PNG轉 ICON ，專用的工具還是要專業的來。用了 <a href="http://recraft.ai/">recraft.ai</a> 把 PNG轉成 SVG，方便日後引用</p><p>採用 <a href="https://jules.google/"> google jules</a>  梳理 README，用 Github Copilot 撰寫主要程式，最後用 Kiro 免費額度修正網頁的樣式跟排版內容，最後 github action 線上部屬如果出錯的時候，也有 AI 可以直接提供意見，相當方便。</p><p>最後網站利用 <a href="https://pages.cloudflare.com/">Cloudflare pages</a> 佈署，每日十萬次查詢次數，不用負擔主機相當方便，相當適合一些小專案實踐</p><p>最後再放一次我的專案網站</p><ul><li><a href="https://linkeveryword.wiz.tw">LinkEveryWord</a></li><li><a href="https://github.com/mesak/LinkEveryWord">https://github.com/mesak/LinkEveryWord</a></li><li><a href="https://chromewebstore.google.com/detail/lkpkimhpldonggkkcoidicbeembcpemj?hl=zh">https://chromewebstore.google.com/detail/lkpkimhpldonggkkcoidicbeembcpemj?hl=zh</a></li></ul><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/chrome">chrome</a><a href="https://mesak.tw/tag/chrome-extension">chrome extension</a><a href="https://mesak.tw/tag/copilot">copilot</a><a href="https://mesak.tw/tag/kiro">kiro</a><a href="https://mesak.tw/tag/python">python</a><a href="https://mesak.tw/tag/vibe-coding">vibe coding</a></div></div>]]>
    </itunes:summary>
    <description>
      <![CDATA[<div><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f17e11e9d5.jpg"><p>前陣子收到了 Github Copilot 的年繳帳單，突然想到最近好像很少用它做了什麼功能，現在 AI Agent 大爆發，任何開發都入門都簡易化了。</p><p>於是就想著用 AI Vibe Coing 一下，開始盤點之前有做那些想一半就放棄的功能。</p><p>於是就先跑了這個 <a href="https://linkeveryword.wiz.tw">LinkEveryWord</a> ，這功能的主體就是 我想在瀏覽網頁的時候，快速查到我電腦裡面的資料，這樣我比較追蹤這東西我到底抓了沒，或是是否有沒有這個檔案的存在，需求很小眾，但是實作起來很難。</p><h2>為何有這個需求，限制又是哪些</h2><p>對一個有數位囤物症的我來說，在電腦裡面下載或是安裝一些東西都算是稀鬆平常的事情，電腦常常又會堆積著大量用不到的檔案或是已經抓過的重複檔案。這點對我來說相當的困擾。如果我在手殘要下載之前可以快速比對一下電腦裡面有沒有安裝或是下載，這樣可以阻擋我點下去下載的需求。</p><p>由於電腦規則的設計，當你用瀏覽器的時候，大部分情況下瀏覽器是讀取不到你電腦內的檔案的，所以需要 Chrome 擴充元件跟其他應用程式的溝通才有辦法在瀏覽器中呈現你要的資料</p><p>以下是開發的碎念，安裝跟使用方式介紹可以跳到 #安裝 環節</p><h2>開工準備</h2><p>有了明確的需求，要開工就會很快。這次為了試驗各個 AI 的實力，我大概聽過的 AI 都稍微碰了一下，最後我只挑幾個常用的來說明。</p><p>我在很久以前就知道我用的一款 Windows 應用程式 <a href="https://www.voidtools.com/">Everything</a> 可以快速地找到我要的檔案，該應用程式也推出了一個<a href="https://www.voidtools.com/zh-cn/support/everything/sdk/">串接的 SDK</a>可以參考。我首先用 GitHub Copilot 直接丟網址給 AGENT 閱讀，並跟我確認規劃功能。</p><p>可能這個對 AI 來說真的算小 CASE，結果 AGENT 一邊規劃一邊把功能給實作完畢。我看功能沒太大問題，就直接把專案切成 Monorepo 的形式分了三個目錄存取，結果這樣的規劃讓我後續的功能部屬一直受到阻礙。</p><p>接著，我利用 AI 產生我的需求，之後用 gemini cli 直接讀取需求，針對另外兩個目錄寫出 README.md，以便我查閱後續的需求跟目的開發。本來是想先規劃再開工，沒想到最小 POC 直接實現，所以後面就根據這個 POC 延伸寫完需求內容一次開發。</p><h3>Chrome 套件開發</h3><p>雖然這個已經有不少經驗，不過距離我最近一次發布的 Chrome 擴充套件已經是十年前了。近期開發的功能則是停滯的狀態，這個需求比較簡單，我需要往本地端呼叫一個 AJAX 查詢，讓使用者可以設定項目。因此我直接使用 GitHub Copilot 開發，建立 plasmo + shadcn，並根據我的需求產出內容、閱讀頁和設定頁，還有快捷鍵註冊，這大概幾小時就搞定了。最多的時間還是微調跟桌面應用程式的串接格式定案。</p><p>因為怕 Chrome 審核太久，我直接打包一版手動上架審核。審核需求的內容，我叫 gemini cli 讀取我的 README 跟設計檔案，把 Chrome 要審核的內容直接生成。至於為什麼使用 gemini 產出，因為只有 Google 最懂 Google XD。</p><p>審核大概花了兩天就 PASS 了。在這兩天期間，我又用了 GitHub Copilot 根據 Cloudflare Pages 的規則，產出 Hono 的網站設計，並設計簡單的部屬，產生 Chrome 所需要的權限政策網址（我後來才看到有網友直接用 GitHub 倉庫的 md 產生，萬萬沒想到）。</p><h3>自動發布策略 (CICD)</h3><p>應用程式、Chrome 套件和介紹網站都好了，接下來最難搞的就是自動發布策略 (CICD)。這幾天上班，我直接開啟 <a href="https://jules.google/">Google Jules</a> 幫我把各個 README 根據已經實現的功能重新發布，一共微調了四五次，接著請它根據我的專案架構擬定一個 CICD 的發布流程。在此期間，我詢問過每日免費的 GPT-5 跟 gemini chat 擬定策略，確定好後再給 Jules。否則他思考很慢還需要多次確認。</p><p>應用程式大約排除掉路徑跟打包的檔案內容，測試個四五次就可以搞定。最麻煩的是 Chrome。我原本是想，我以後的桌面應用程式更新，線上WEB也直接更新版號跟更新進度內容，Chrome 擴充元件亦然，但要實作之後才想到 Chrome 發布需要審核。結果我將過程改為 Chrome 變更內容增加版號才自動上 Tag 推版，首先針對桌面應用程式完成，再分資料夾。</p><p>最開始的 Agent 在增加 gitignore 的時候不小心將 lib/、lib64/ 都加進去了，導致套件發送版本打包一直失敗，一般的 Agent 在測試時根本測不出差異，本地端 act 測試也都是正常的。後來用 GitHub Copilot 的 GPT-5 模型來全掃描，才抓到這個問題。最終，配置對應的 <a href="https://github.com/fregante/chrome-webstore-upload-keys">Google OAuth</a>版本授權和 KEY，成功上傳了。</p><h2>安裝說明</h2><p>首先到商店安裝 <a href="https://chromewebstore.google.com/detail/linkeveryword-extension/lkpkimhpldonggkkcoidicbeembcpemj?hl=zh">Chrome 套件</a> ，安裝完畢之後 設定-&gt;LinkEveryWord&nbsp;詳細資料-&gt;擴充功能選項</p><p>在設定的地方，可以設定其他網址，方便未來其他應用程式的擴充，這邊直接 “開啟Chrome快捷鍵設定頁面” ，找到 LinkEveryWord&nbsp;，看到 “Open LinkEveryWord search panel” 框框，按下筆形圖案錄入你想紀錄的快捷鍵，這樣就可以使用這個快捷鍵呼叫 右側結果區塊</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-8cdeeded5c.jpg"><p>接著還要 應用程式的配合，到<a href="https://github.com/mesak/LinkEveryWord/releases"> github page </a>的 releases 清單，抓取最新的 zip ，下載下來解壓縮，執行 EverythingFlaskSearch.exe，就會自動叫出瀏覽器開啟搜尋的臨時網頁</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a5e5825cb5.jpg"><p>這個東西等同是 Everything 的本地端網頁版，當然你如果自已會部屬的話也可以把家裡電腦架設主機配置遠端IP ，在公司搜尋家裡的檔案 ( 但是不能看) 這算是額外自己配置的功能，如果想要開機自動啟動可以用 NSSM 或是 ServiceEx ，這兩種都可以自動開機啟動。</p><p>到現在啟動並配置完成，功能就完畢了。</p><h2>結語</h2><p>目前這個小專案算是我一個實驗 Vibe 到底可以做到那些事情的一個小過程</p><p>這個專案我用了 微軟的 Microsoft Copilot 幫我產生 Logo，用線上的影像工具幫我放個首圖，應用程式的 ICON 用了 <a href="https://www.xiconeditor.com/">X-ICONEDITOR </a>把 PNG轉 ICON ，專用的工具還是要專業的來。用了 <a href="http://recraft.ai/">recraft.ai</a> 把 PNG轉成 SVG，方便日後引用</p><p>採用 <a href="https://jules.google/"> google jules</a>  梳理 README，用 Github Copilot 撰寫主要程式，最後用 Kiro 免費額度修正網頁的樣式跟排版內容，最後 github action 線上部屬如果出錯的時候，也有 AI 可以直接提供意見，相當方便。</p><p>最後網站利用 <a href="https://pages.cloudflare.com/">Cloudflare pages</a> 佈署，每日十萬次查詢次數，不用負擔主機相當方便，相當適合一些小專案實踐</p><p>最後再放一次我的專案網站</p><ul><li><a href="https://linkeveryword.wiz.tw">LinkEveryWord</a></li><li><a href="https://github.com/mesak/LinkEveryWord">https://github.com/mesak/LinkEveryWord</a></li><li><a href="https://chromewebstore.google.com/detail/lkpkimhpldonggkkcoidicbeembcpemj?hl=zh">https://chromewebstore.google.com/detail/lkpkimhpldonggkkcoidicbeembcpemj?hl=zh</a></li></ul><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/chrome">chrome</a><a href="https://mesak.tw/tag/chrome-extension">chrome extension</a><a href="https://mesak.tw/tag/copilot">copilot</a><a href="https://mesak.tw/tag/kiro">kiro</a><a href="https://mesak.tw/tag/python">python</a><a href="https://mesak.tw/tag/vibe-coding">vibe coding</a></div></div>]]>
    </description>
    <content:encoded><![CDATA[<div><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f17e11e9d5.jpg"><p>前陣子收到了 Github Copilot 的年繳帳單，突然想到最近好像很少用它做了什麼功能，現在 AI Agent 大爆發，任何開發都入門都簡易化了。</p><p>於是就想著用 AI Vibe Coing 一下，開始盤點之前有做那些想一半就放棄的功能。</p><p>於是就先跑了這個 <a href="https://linkeveryword.wiz.tw">LinkEveryWord</a> ，這功能的主體就是 我想在瀏覽網頁的時候，快速查到我電腦裡面的資料，這樣我比較追蹤這東西我到底抓了沒，或是是否有沒有這個檔案的存在，需求很小眾，但是實作起來很難。</p><h2>為何有這個需求，限制又是哪些</h2><p>對一個有數位囤物症的我來說，在電腦裡面下載或是安裝一些東西都算是稀鬆平常的事情，電腦常常又會堆積著大量用不到的檔案或是已經抓過的重複檔案。這點對我來說相當的困擾。如果我在手殘要下載之前可以快速比對一下電腦裡面有沒有安裝或是下載，這樣可以阻擋我點下去下載的需求。</p><p>由於電腦規則的設計，當你用瀏覽器的時候，大部分情況下瀏覽器是讀取不到你電腦內的檔案的，所以需要 Chrome 擴充元件跟其他應用程式的溝通才有辦法在瀏覽器中呈現你要的資料</p><p>以下是開發的碎念，安裝跟使用方式介紹可以跳到 #安裝 環節</p><h2>開工準備</h2><p>有了明確的需求，要開工就會很快。這次為了試驗各個 AI 的實力，我大概聽過的 AI 都稍微碰了一下，最後我只挑幾個常用的來說明。</p><p>我在很久以前就知道我用的一款 Windows 應用程式 <a href="https://www.voidtools.com/">Everything</a> 可以快速地找到我要的檔案，該應用程式也推出了一個<a href="https://www.voidtools.com/zh-cn/support/everything/sdk/">串接的 SDK</a>可以參考。我首先用 GitHub Copilot 直接丟網址給 AGENT 閱讀，並跟我確認規劃功能。</p><p>可能這個對 AI 來說真的算小 CASE，結果 AGENT 一邊規劃一邊把功能給實作完畢。我看功能沒太大問題，就直接把專案切成 Monorepo 的形式分了三個目錄存取，結果這樣的規劃讓我後續的功能部屬一直受到阻礙。</p><p>接著，我利用 AI 產生我的需求，之後用 gemini cli 直接讀取需求，針對另外兩個目錄寫出 README.md，以便我查閱後續的需求跟目的開發。本來是想先規劃再開工，沒想到最小 POC 直接實現，所以後面就根據這個 POC 延伸寫完需求內容一次開發。</p><h3>Chrome 套件開發</h3><p>雖然這個已經有不少經驗，不過距離我最近一次發布的 Chrome 擴充套件已經是十年前了。近期開發的功能則是停滯的狀態，這個需求比較簡單，我需要往本地端呼叫一個 AJAX 查詢，讓使用者可以設定項目。因此我直接使用 GitHub Copilot 開發，建立 plasmo + shadcn，並根據我的需求產出內容、閱讀頁和設定頁，還有快捷鍵註冊，這大概幾小時就搞定了。最多的時間還是微調跟桌面應用程式的串接格式定案。</p><p>因為怕 Chrome 審核太久，我直接打包一版手動上架審核。審核需求的內容，我叫 gemini cli 讀取我的 README 跟設計檔案，把 Chrome 要審核的內容直接生成。至於為什麼使用 gemini 產出，因為只有 Google 最懂 Google XD。</p><p>審核大概花了兩天就 PASS 了。在這兩天期間，我又用了 GitHub Copilot 根據 Cloudflare Pages 的規則，產出 Hono 的網站設計，並設計簡單的部屬，產生 Chrome 所需要的權限政策網址（我後來才看到有網友直接用 GitHub 倉庫的 md 產生，萬萬沒想到）。</p><h3>自動發布策略 (CICD)</h3><p>應用程式、Chrome 套件和介紹網站都好了，接下來最難搞的就是自動發布策略 (CICD)。這幾天上班，我直接開啟 <a href="https://jules.google/">Google Jules</a> 幫我把各個 README 根據已經實現的功能重新發布，一共微調了四五次，接著請它根據我的專案架構擬定一個 CICD 的發布流程。在此期間，我詢問過每日免費的 GPT-5 跟 gemini chat 擬定策略，確定好後再給 Jules。否則他思考很慢還需要多次確認。</p><p>應用程式大約排除掉路徑跟打包的檔案內容，測試個四五次就可以搞定。最麻煩的是 Chrome。我原本是想，我以後的桌面應用程式更新，線上WEB也直接更新版號跟更新進度內容，Chrome 擴充元件亦然，但要實作之後才想到 Chrome 發布需要審核。結果我將過程改為 Chrome 變更內容增加版號才自動上 Tag 推版，首先針對桌面應用程式完成，再分資料夾。</p><p>最開始的 Agent 在增加 gitignore 的時候不小心將 lib/、lib64/ 都加進去了，導致套件發送版本打包一直失敗，一般的 Agent 在測試時根本測不出差異，本地端 act 測試也都是正常的。後來用 GitHub Copilot 的 GPT-5 模型來全掃描，才抓到這個問題。最終，配置對應的 <a href="https://github.com/fregante/chrome-webstore-upload-keys">Google OAuth</a>版本授權和 KEY，成功上傳了。</p><h2>安裝說明</h2><p>首先到商店安裝 <a href="https://chromewebstore.google.com/detail/linkeveryword-extension/lkpkimhpldonggkkcoidicbeembcpemj?hl=zh">Chrome 套件</a> ，安裝完畢之後 設定-&gt;LinkEveryWord&nbsp;詳細資料-&gt;擴充功能選項</p><p>在設定的地方，可以設定其他網址，方便未來其他應用程式的擴充，這邊直接 “開啟Chrome快捷鍵設定頁面” ，找到 LinkEveryWord&nbsp;，看到 “Open LinkEveryWord search panel” 框框，按下筆形圖案錄入你想紀錄的快捷鍵，這樣就可以使用這個快捷鍵呼叫 右側結果區塊</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-8cdeeded5c.jpg"><p>接著還要 應用程式的配合，到<a href="https://github.com/mesak/LinkEveryWord/releases"> github page </a>的 releases 清單，抓取最新的 zip ，下載下來解壓縮，執行 EverythingFlaskSearch.exe，就會自動叫出瀏覽器開啟搜尋的臨時網頁</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a5e5825cb5.jpg"><p>這個東西等同是 Everything 的本地端網頁版，當然你如果自已會部屬的話也可以把家裡電腦架設主機配置遠端IP ，在公司搜尋家裡的檔案 ( 但是不能看) 這算是額外自己配置的功能，如果想要開機自動啟動可以用 NSSM 或是 ServiceEx ，這兩種都可以自動開機啟動。</p><p>到現在啟動並配置完成，功能就完畢了。</p><h2>結語</h2><p>目前這個小專案算是我一個實驗 Vibe 到底可以做到那些事情的一個小過程</p><p>這個專案我用了 微軟的 Microsoft Copilot 幫我產生 Logo，用線上的影像工具幫我放個首圖，應用程式的 ICON 用了 <a href="https://www.xiconeditor.com/">X-ICONEDITOR </a>把 PNG轉 ICON ，專用的工具還是要專業的來。用了 <a href="http://recraft.ai/">recraft.ai</a> 把 PNG轉成 SVG，方便日後引用</p><p>採用 <a href="https://jules.google/"> google jules</a>  梳理 README，用 Github Copilot 撰寫主要程式，最後用 Kiro 免費額度修正網頁的樣式跟排版內容，最後 github action 線上部屬如果出錯的時候，也有 AI 可以直接提供意見，相當方便。</p><p>最後網站利用 <a href="https://pages.cloudflare.com/">Cloudflare pages</a> 佈署，每日十萬次查詢次數，不用負擔主機相當方便，相當適合一些小專案實踐</p><p>最後再放一次我的專案網站</p><ul><li><a href="https://linkeveryword.wiz.tw">LinkEveryWord</a></li><li><a href="https://github.com/mesak/LinkEveryWord">https://github.com/mesak/LinkEveryWord</a></li><li><a href="https://chromewebstore.google.com/detail/lkpkimhpldonggkkcoidicbeembcpemj?hl=zh">https://chromewebstore.google.com/detail/lkpkimhpldonggkkcoidicbeembcpemj?hl=zh</a></li></ul><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/chrome">chrome</a><a href="https://mesak.tw/tag/chrome-extension">chrome extension</a><a href="https://mesak.tw/tag/copilot">copilot</a><a href="https://mesak.tw/tag/kiro">kiro</a><a href="https://mesak.tw/tag/python">python</a><a href="https://mesak.tw/tag/vibe-coding">vibe coding</a></div></div>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f17e11e9d5.jpg"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f17e11e9d5.jpg" medium="image"/>
    <pubDate>Sun, 07 Sep 2025 08:32:04 +0000</pubDate>
  </item><item>
    <title><![CDATA[[教學] 利用 n8n 建立 LINE 聊天機器人]]></title>
    <link>https://mesak.tw/code/12110/n8n-create-linebot-workflow</link>
    <itunes:title><![CDATA[[教學] 利用 n8n 建立 LINE 聊天機器人]]></itunes:title>
    <itunes:author><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[<div><p>n8n 有多厲害，這邊就不贅述了，作為一個自動化工作流的軟體，n8n 相當適合用來產生判定輸入的工作流程，聊天機器人就是一個案例， n8n 有很多種建立方式，這邊就不著重於介紹了，以往很多 n8n 串 LINEBOT 都直接請使用原生的 webhook 功能，現在社群推出了一個 <a href="https://github.com/syshen/n8n-nodes-linewebhook">n8n-nodes-linewebhook</a> 可以很快速地把發送以及推送給簡化，這邊就快速紀錄一下建立的流程。</p><p>首先要準備幾個東西</p><ul><li>n8n 服務 (不管是個人架設還是購買服務，自架的服務本文設定時還在 1.95.3，過低的請自行升級)</li><li>LINE 帳號 (個人的就可以)</li><li><a href="https://developers.line.biz/console/">LINE BOT 申請</a></li></ul><h2>進入 n8n：</h2><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a8a24514a6.png"><p>首先安裝 n8n 的 n8n-nodes-linewebhook 功能，點選左下角人名右側的 點點點，按下 Setting</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3c73940288.png"><p>接著點選左邊的 Community nodes ( 社群節點) ，點選右邊的 install，跳出安裝對話框，輸入 n8n-nodes-linewebhook 打勾風險評估勾勾，按下 install 等待安裝即可</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0c1586eafc.png"><p>安裝完畢就可以看到 畫面中多一個 n8n-nodes-linewebhook ，代表安裝完成</p><h2>建立 LINE BOT Workflow 工作流</h2><p>接著建立一個 Workflow 工作流，點選起始點，搜尋 line，點選 Line Webhook 有閃電的圖案</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c259e792b9.png"><p>首先建立認證點選 Credential， 如果你只有一個機器人的話，path 輸入 line-webhook 就夠了</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6309cc66a0.png"><p>接著進入 LINE developers console 後台，要注意 LINE 進入 機器人的畫面會有兩種，一種是<a href="https://developers.line.biz/">後臺設定</a>資料，一種是<a href="https://manager.line.biz/">帳號控制</a>，主要進入的是 CONSOLE，建立好機器人之後，最主要就是要拿到頻道的密碼 也就是 Channel Secret</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ea0038e97b.png"><p>可以看到 Secret 右邊都有一個小按鈕，這個可以直接複製，接著貼上 n8n Credential 的 Channel Secret 就可以了</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ab86998018.png"><p>設定完畢之後可以點選一下 Webhook URLs 橘色的字樣，這邊會顯示你n8n 接收 LINE 的網址，要注意兩個問題，當你工作流尚未啟動的時候用的是 Test URL網址，正式建立好工作流之後，要使用的是 Production URL 網址，Inaction 要打開 Production URL 才會工作，不要搞混了，複製好網址要把網址告訴 LINE ，把機器人的 webhook 填上</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c044dfbe14.png"><p>點選 Messaging API ， Webhook settings 按下 Edit，填入剛剛的網址，當你正式啟動的時候可以按下 Verify，LINE 會檢查發送一個測試過去，如果你在測試階段，確定網址有貼好就可以先不用管，因為 n8n 要啟動 LINE測試才會顯示 Success (成功)</p><h2>設定簡單的訊息發送</h2><p>當你設定 LINE Webhook 節點之後，就會出現這個畫面。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9adaba7447.png"><p>LINE BOT 可以接收多種訊息的內容，如果你最主要是接收文字內容，把 text 支線拿來延伸做下個節點控制即可</p><p>這邊直接簡單實作一下 自動回應，先搜尋 LINE ，點選 LINE MESSAGE，先建立一個回應訊息，選擇 Create a text message</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4c6e668fe0.png"><p>出現節點後點兩下，會出現以下空白畫面</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-542f4070e1.png"><p>請先確定你的 LINE BOT 還在測試的網址 Test URL，左邊的  Execute pervious nodes 點一下，讓他等待接收，出現轉圈圈之後，用 LINE 傳一個測試的訊息</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2cd94857a0.png"><p>左邊出現接收到的訊息，接著把 收到的訊息 “測試123” 整個區塊用拖曳的方式放到右邊</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3d6d7946ca.gif"><p>關閉之後，建立後續動作，自動回應內容，搜尋 LINE，點選 LINE Messaging API ，選擇 Send a message</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1246d3aedd.png"><p>這邊要建立 回傳 的 LINE 認證，回到 LINE developers console ，點選 Messaging API，最下方有個  Channel access token ，這個要注意，右邊的 Reissue 是重新產生 TOKEN，只要按下去所有正在運作的BOT都會無法發送失效，這個是長效型的 token 只需要複製這行，建立 Line Messaging Auth account 就可以了，接著一樣把剛剛的 LINE MessageNode 的 message 拖曳到 Message 裡面，Line Webhook 的 replyToken 拖曳到 ReplyToken 這個欄位，就可以完成機器人回應，趕快存檔之後把 Active 打開，並且把 機器人的 Webhook 改回 Production URL，跟機器人對話試試</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6091cbd309.png"><p>如果你需要 在回應上調整內容，只需要 Message Text 欄位自動加上些內容即可。剩下的就是 n8n 該有的節點作業了，希望這點簡單的教學能夠快速上手</p><p>如果有些 n8n 其他設定上的問題也可以參考單純使用 webhook 節點的教學唷</p><ul><li><a href="https://www.darrelltw.com/n8n-webhook/">n8n Webhook 節點</a></li></ul><p>相關網址：</p><ul><li><a href="https://n8n.io">n8n.io</a></li><li><a href="https://github.com/syshen/n8n-nodes-linewebhook">n8n-nodes-linewebhook</a></li><li><a href="https://developers.line.biz/">https://developers.line.biz/</a></li></ul><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/n8n">n8n</a></div></div>]]>
    </itunes:summary>
    <description>
      <![CDATA[<div><p>n8n 有多厲害，這邊就不贅述了，作為一個自動化工作流的軟體，n8n 相當適合用來產生判定輸入的工作流程，聊天機器人就是一個案例， n8n 有很多種建立方式，這邊就不著重於介紹了，以往很多 n8n 串 LINEBOT 都直接請使用原生的 webhook 功能，現在社群推出了一個 <a href="https://github.com/syshen/n8n-nodes-linewebhook">n8n-nodes-linewebhook</a> 可以很快速地把發送以及推送給簡化，這邊就快速紀錄一下建立的流程。</p><p>首先要準備幾個東西</p><ul><li>n8n 服務 (不管是個人架設還是購買服務，自架的服務本文設定時還在 1.95.3，過低的請自行升級)</li><li>LINE 帳號 (個人的就可以)</li><li><a href="https://developers.line.biz/console/">LINE BOT 申請</a></li></ul><h2>進入 n8n：</h2><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a8a24514a6.png"><p>首先安裝 n8n 的 n8n-nodes-linewebhook 功能，點選左下角人名右側的 點點點，按下 Setting</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3c73940288.png"><p>接著點選左邊的 Community nodes ( 社群節點) ，點選右邊的 install，跳出安裝對話框，輸入 n8n-nodes-linewebhook 打勾風險評估勾勾，按下 install 等待安裝即可</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0c1586eafc.png"><p>安裝完畢就可以看到 畫面中多一個 n8n-nodes-linewebhook ，代表安裝完成</p><h2>建立 LINE BOT Workflow 工作流</h2><p>接著建立一個 Workflow 工作流，點選起始點，搜尋 line，點選 Line Webhook 有閃電的圖案</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c259e792b9.png"><p>首先建立認證點選 Credential， 如果你只有一個機器人的話，path 輸入 line-webhook 就夠了</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6309cc66a0.png"><p>接著進入 LINE developers console 後台，要注意 LINE 進入 機器人的畫面會有兩種，一種是<a href="https://developers.line.biz/">後臺設定</a>資料，一種是<a href="https://manager.line.biz/">帳號控制</a>，主要進入的是 CONSOLE，建立好機器人之後，最主要就是要拿到頻道的密碼 也就是 Channel Secret</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ea0038e97b.png"><p>可以看到 Secret 右邊都有一個小按鈕，這個可以直接複製，接著貼上 n8n Credential 的 Channel Secret 就可以了</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ab86998018.png"><p>設定完畢之後可以點選一下 Webhook URLs 橘色的字樣，這邊會顯示你n8n 接收 LINE 的網址，要注意兩個問題，當你工作流尚未啟動的時候用的是 Test URL網址，正式建立好工作流之後，要使用的是 Production URL 網址，Inaction 要打開 Production URL 才會工作，不要搞混了，複製好網址要把網址告訴 LINE ，把機器人的 webhook 填上</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c044dfbe14.png"><p>點選 Messaging API ， Webhook settings 按下 Edit，填入剛剛的網址，當你正式啟動的時候可以按下 Verify，LINE 會檢查發送一個測試過去，如果你在測試階段，確定網址有貼好就可以先不用管，因為 n8n 要啟動 LINE測試才會顯示 Success (成功)</p><h2>設定簡單的訊息發送</h2><p>當你設定 LINE Webhook 節點之後，就會出現這個畫面。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9adaba7447.png"><p>LINE BOT 可以接收多種訊息的內容，如果你最主要是接收文字內容，把 text 支線拿來延伸做下個節點控制即可</p><p>這邊直接簡單實作一下 自動回應，先搜尋 LINE ，點選 LINE MESSAGE，先建立一個回應訊息，選擇 Create a text message</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4c6e668fe0.png"><p>出現節點後點兩下，會出現以下空白畫面</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-542f4070e1.png"><p>請先確定你的 LINE BOT 還在測試的網址 Test URL，左邊的  Execute pervious nodes 點一下，讓他等待接收，出現轉圈圈之後，用 LINE 傳一個測試的訊息</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2cd94857a0.png"><p>左邊出現接收到的訊息，接著把 收到的訊息 “測試123” 整個區塊用拖曳的方式放到右邊</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3d6d7946ca.gif"><p>關閉之後，建立後續動作，自動回應內容，搜尋 LINE，點選 LINE Messaging API ，選擇 Send a message</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1246d3aedd.png"><p>這邊要建立 回傳 的 LINE 認證，回到 LINE developers console ，點選 Messaging API，最下方有個  Channel access token ，這個要注意，右邊的 Reissue 是重新產生 TOKEN，只要按下去所有正在運作的BOT都會無法發送失效，這個是長效型的 token 只需要複製這行，建立 Line Messaging Auth account 就可以了，接著一樣把剛剛的 LINE MessageNode 的 message 拖曳到 Message 裡面，Line Webhook 的 replyToken 拖曳到 ReplyToken 這個欄位，就可以完成機器人回應，趕快存檔之後把 Active 打開，並且把 機器人的 Webhook 改回 Production URL，跟機器人對話試試</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6091cbd309.png"><p>如果你需要 在回應上調整內容，只需要 Message Text 欄位自動加上些內容即可。剩下的就是 n8n 該有的節點作業了，希望這點簡單的教學能夠快速上手</p><p>如果有些 n8n 其他設定上的問題也可以參考單純使用 webhook 節點的教學唷</p><ul><li><a href="https://www.darrelltw.com/n8n-webhook/">n8n Webhook 節點</a></li></ul><p>相關網址：</p><ul><li><a href="https://n8n.io">n8n.io</a></li><li><a href="https://github.com/syshen/n8n-nodes-linewebhook">n8n-nodes-linewebhook</a></li><li><a href="https://developers.line.biz/">https://developers.line.biz/</a></li></ul><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/n8n">n8n</a></div></div>]]>
    </description>
    <content:encoded><![CDATA[<div><p>n8n 有多厲害，這邊就不贅述了，作為一個自動化工作流的軟體，n8n 相當適合用來產生判定輸入的工作流程，聊天機器人就是一個案例， n8n 有很多種建立方式，這邊就不著重於介紹了，以往很多 n8n 串 LINEBOT 都直接請使用原生的 webhook 功能，現在社群推出了一個 <a href="https://github.com/syshen/n8n-nodes-linewebhook">n8n-nodes-linewebhook</a> 可以很快速地把發送以及推送給簡化，這邊就快速紀錄一下建立的流程。</p><p>首先要準備幾個東西</p><ul><li>n8n 服務 (不管是個人架設還是購買服務，自架的服務本文設定時還在 1.95.3，過低的請自行升級)</li><li>LINE 帳號 (個人的就可以)</li><li><a href="https://developers.line.biz/console/">LINE BOT 申請</a></li></ul><h2>進入 n8n：</h2><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a8a24514a6.png"><p>首先安裝 n8n 的 n8n-nodes-linewebhook 功能，點選左下角人名右側的 點點點，按下 Setting</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3c73940288.png"><p>接著點選左邊的 Community nodes ( 社群節點) ，點選右邊的 install，跳出安裝對話框，輸入 n8n-nodes-linewebhook 打勾風險評估勾勾，按下 install 等待安裝即可</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0c1586eafc.png"><p>安裝完畢就可以看到 畫面中多一個 n8n-nodes-linewebhook ，代表安裝完成</p><h2>建立 LINE BOT Workflow 工作流</h2><p>接著建立一個 Workflow 工作流，點選起始點，搜尋 line，點選 Line Webhook 有閃電的圖案</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c259e792b9.png"><p>首先建立認證點選 Credential， 如果你只有一個機器人的話，path 輸入 line-webhook 就夠了</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6309cc66a0.png"><p>接著進入 LINE developers console 後台，要注意 LINE 進入 機器人的畫面會有兩種，一種是<a href="https://developers.line.biz/">後臺設定</a>資料，一種是<a href="https://manager.line.biz/">帳號控制</a>，主要進入的是 CONSOLE，建立好機器人之後，最主要就是要拿到頻道的密碼 也就是 Channel Secret</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ea0038e97b.png"><p>可以看到 Secret 右邊都有一個小按鈕，這個可以直接複製，接著貼上 n8n Credential 的 Channel Secret 就可以了</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ab86998018.png"><p>設定完畢之後可以點選一下 Webhook URLs 橘色的字樣，這邊會顯示你n8n 接收 LINE 的網址，要注意兩個問題，當你工作流尚未啟動的時候用的是 Test URL網址，正式建立好工作流之後，要使用的是 Production URL 網址，Inaction 要打開 Production URL 才會工作，不要搞混了，複製好網址要把網址告訴 LINE ，把機器人的 webhook 填上</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c044dfbe14.png"><p>點選 Messaging API ， Webhook settings 按下 Edit，填入剛剛的網址，當你正式啟動的時候可以按下 Verify，LINE 會檢查發送一個測試過去，如果你在測試階段，確定網址有貼好就可以先不用管，因為 n8n 要啟動 LINE測試才會顯示 Success (成功)</p><h2>設定簡單的訊息發送</h2><p>當你設定 LINE Webhook 節點之後，就會出現這個畫面。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9adaba7447.png"><p>LINE BOT 可以接收多種訊息的內容，如果你最主要是接收文字內容，把 text 支線拿來延伸做下個節點控制即可</p><p>這邊直接簡單實作一下 自動回應，先搜尋 LINE ，點選 LINE MESSAGE，先建立一個回應訊息，選擇 Create a text message</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4c6e668fe0.png"><p>出現節點後點兩下，會出現以下空白畫面</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-542f4070e1.png"><p>請先確定你的 LINE BOT 還在測試的網址 Test URL，左邊的  Execute pervious nodes 點一下，讓他等待接收，出現轉圈圈之後，用 LINE 傳一個測試的訊息</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2cd94857a0.png"><p>左邊出現接收到的訊息，接著把 收到的訊息 “測試123” 整個區塊用拖曳的方式放到右邊</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3d6d7946ca.gif"><p>關閉之後，建立後續動作，自動回應內容，搜尋 LINE，點選 LINE Messaging API ，選擇 Send a message</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1246d3aedd.png"><p>這邊要建立 回傳 的 LINE 認證，回到 LINE developers console ，點選 Messaging API，最下方有個  Channel access token ，這個要注意，右邊的 Reissue 是重新產生 TOKEN，只要按下去所有正在運作的BOT都會無法發送失效，這個是長效型的 token 只需要複製這行，建立 Line Messaging Auth account 就可以了，接著一樣把剛剛的 LINE MessageNode 的 message 拖曳到 Message 裡面，Line Webhook 的 replyToken 拖曳到 ReplyToken 這個欄位，就可以完成機器人回應，趕快存檔之後把 Active 打開，並且把 機器人的 Webhook 改回 Production URL，跟機器人對話試試</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6091cbd309.png"><p>如果你需要 在回應上調整內容，只需要 Message Text 欄位自動加上些內容即可。剩下的就是 n8n 該有的節點作業了，希望這點簡單的教學能夠快速上手</p><p>如果有些 n8n 其他設定上的問題也可以參考單純使用 webhook 節點的教學唷</p><ul><li><a href="https://www.darrelltw.com/n8n-webhook/">n8n Webhook 節點</a></li></ul><p>相關網址：</p><ul><li><a href="https://n8n.io">n8n.io</a></li><li><a href="https://github.com/syshen/n8n-nodes-linewebhook">n8n-nodes-linewebhook</a></li><li><a href="https://developers.line.biz/">https://developers.line.biz/</a></li></ul><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/n8n">n8n</a></div></div>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a8a24514a6.png"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a8a24514a6.png" medium="image"/>
    <pubDate>Sun, 08 Jun 2025 08:48:26 +0000</pubDate>
  </item><item>
    <title><![CDATA[[開箱] IROCKS K103R 熱插拔無線機械式鍵盤]]></title>
    <link>https://mesak.tw/hardware/keyboard/12075/irocks-k103r-wireless-keyboard</link>
    <itunes:title><![CDATA[[開箱] IROCKS K103R 熱插拔無線機械式鍵盤]]></itunes:title>
    <itunes:author><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[<div><p>許久沒有開箱了，近年鍵盤的規格豐富程度實在是超乎我的想像，今天要開箱的就是 &nbsp;IROCKS K103R 無線機械式鍵盤，如標題所見，這款機械式鍵盤除了支援無線之外，還可以熱插拔替換你想要的軸體，尺寸來到 75 配列，算是短小鍵盤裡面還擁有 FN 區域功能鍵的配置，完整的方向鍵區域還帶有一個多功能旋鈕</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-43c3726f2f.jpg"><p>iRocks K103R 提供三種顏色，可搭配自己想要的手感選擇軸體，這款是防塵梅紅軸，打習慣紅軸的我喜歡這種線性手感</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4dc4ab52a7.jpg"><p>配色有三種配色：極光藍/宇治金時/薰衣紫，這款是極光藍的配色</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1b7f74c081.jpg"><p>盒內配件，鍵盤本體，拔鍵器，四顆替用軸，TYPEC 連接線，說明書</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c14555227e.jpg"><p>本體的重量為 812g 左右，做為小尺寸鍵盤還算是相當有份量的</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-dfe6885ed4.jpg"><p>鍵盤正面，少了中規中矩的鍵盤造型 K103R 沿著方向鍵採用多出來一小區塊的設計，讓鍵盤看起來有著一定比例的平衡</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-63967185c8.jpg"><p>鍵盤底部銘版以及二階段立腳</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-369165dffa.jpg"><p>鍵盤 TYPE-C 連接線，採用鍍金接頭，長度約有 180cm 左右</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-e620a51192.jpg"><p>拔鍵器與四個防塵莓紅軸，軸體都是隨著鍵盤的軸體附的，除了備用也可以拿去別的鍵盤裝上試試。</p><p>外觀</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-139c6a7253.jpg"><p>整體鍵盤造型，金色旋鈕特別突出，算是鍵盤的一個造型特色亮點。其他兩隻的鍵盤採用的會是黑色與銀色配色的旋鈕</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-41644070b6.jpg"><p>鍵盤背板操作開關，左側還有 2.4G 接收器的位置。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-b442c49f2f.jpg"><p>兩段式的立腳，可以輕鬆貼出平放，一段，跟比較高腳位的二段式立腳</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d7b68a5283.jpg"><p>擺放位置可以依個人喜好配置。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-432ee03edc.jpg"><p>操作開關可以切換為 2.4G、有線(OFF)、藍牙模式，另外也可以切成 MAC 系統用的操作按鍵</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-12fb4d7160.jpg"><p>2.4G 收納倉採用磁吸模式，可以很簡單的利用磁吸收納，要拔起的時候也不怕搞丟。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-993ac8eaf1.jpg"><p>鍵盤右側方向區向下突起的造型，讓每個按鍵都有合理的區間位置，如果不習慣緊湊位置鍵帽的人可以考慮看看這種配置。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-e433a4a351.jpg"><p>鍵盤側刻採用雷雕黑色注音刻字，稍微想看一下字的朋友也可以透過這個鍵帽來查看。另外 FN 功能鍵區的功能如下：</p><p>Fn + ESC：鍵盤鎖<br>Fn + Win：鎖定 Win 鍵<br>Fn + F1：顯示桌面<br>Fn + F2：Windows 鎖定<br>Fn + F3：搜尋<br>Fn + F4：小算盤</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ba563edf65.jpg"><p>Fn + F5：我的電腦<br>Fn + F6：E-Mail<br>Fn + F7：首頁<br>Fn + F8：多媒體播放器<br>Fn + F9：播放 / 暫停<br>Fn + F10：上一首<br>Fn + F11：停止<br>Fn + F12：下一首</p><p>智慧滾輪</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c7e8648f35.jpg"><p>智慧滾輪我想如果有用過的應該不陌生，IROCKS 給的 智慧滾輪遠比一般鍵盤給的音量滾輪功能多太多，這功能源自於微軟的 Surface Dial 轉輪功能，可在 Window 的裝置 &gt; 滾輪內做調整</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-fb976160cb.jpg"><p>只要電腦是 Windows10/11，都有這個智慧滾輪功能，這個智慧滾輪的主要功能有三種：音量調整、工作頁面、智慧滾輪，可以依照自己想要操作的定義去調整。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-62d603c261.jpg"><p>鍵盤的指示燈做在左上角，主要是大小寫指示燈、Win 鎖鍵指示燈、充電低店指示燈</p><p>換鍵軸</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-302c9174ab.jpg"><p>使用鍵盤附贈的拔鍵器鐵絲的部分，可以轉個角度將鍵帽拔下</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-034a84dacd.jpg"><p>粉紅色的就是鍵軸了。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7f26e4c867.jpg"><p>鍵軸的左右兩側各有一個小凹槽，利用拔鍵器的另一端，可以夾勾住鍵軸，直上直下就可以將鍵軸拔起</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7919a91cee.jpg"><p>由於鍵盤採用 Gasket 組件模式，整個鍵盤有多層次的疊加，所以拔起的底部看到定位版可能會有點浮浮的，主要應該還是吸音板的存在</p><p>Gasket <strong>結構</strong></p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7715ca385c.png"><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-df44244469.jpg"><p>鍵帽採用二射成形，可以清楚看到兩種顏色的塑料疊加，可以保證打字不掉字。</p><p>軟體</p><p>IROCKS依然還是一種鍵盤採用一個驅動<a href="https://www.i-rocks.com.tw/web/service/download_list_in.jsp?cp_id=CP1698977908744"> K103R應用軟體</a>，可以到官方網站去下載應用軟體安裝一下，來達到更多鍵盤的應用</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4578601dbb.gif"><p>軟體與以往的 IROCKS 推出的機械式鍵盤一樣，可以自訂設定檔，以及 FN 組合鍵都可以自訂，也可以錄製巨集鍵，配合 FN或是直接替換原鍵設定，利用軟體替換相當方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-421498689d.gif"><p>這次的燈光特效居然還有音樂律動，可以隨著系統的音效選擇律動，把鍵盤擺旁邊也是挺有視覺效果的</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="IROCKS K103R 發光" data-litespeed-src="https://www.youtube.com/embed/izd_5Gd73xg?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><p>整體</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-374ba1dcb1.jpg"><p>IROCKS K103R 相當有特色的是打字聲音，整體打起字來相當的清脆，縱使我這把鍵盤是線性的軸體，觸底所觸發的回饋聲音也是讓人打起字來相當的有感覺。</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="IROCKS K103R 打字測試" data-litespeed-src="https://www.youtube.com/embed/uwfnqOxtEyA?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><p>IROCKS K103R 整體來說，採用了Gasket結構讓按鍵回饋更Q彈，不管是哪種軸體，打起字來給予的回饋感都相當的不錯，定位版加上吸音棉減少了空洞的雜音，帶來的是更清脆明朗的敲擊聲。玩家更可以自己的喜好選擇想要的軸體以及配色，如果追求更高級的訂製，亦可以單獨購買軸體，來切換自己想要的自定義設定。</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mechanical-keyboard">機械鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]>
    </itunes:summary>
    <description>
      <![CDATA[<div><p>許久沒有開箱了，近年鍵盤的規格豐富程度實在是超乎我的想像，今天要開箱的就是 &nbsp;IROCKS K103R 無線機械式鍵盤，如標題所見，這款機械式鍵盤除了支援無線之外，還可以熱插拔替換你想要的軸體，尺寸來到 75 配列，算是短小鍵盤裡面還擁有 FN 區域功能鍵的配置，完整的方向鍵區域還帶有一個多功能旋鈕</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-43c3726f2f.jpg"><p>iRocks K103R 提供三種顏色，可搭配自己想要的手感選擇軸體，這款是防塵梅紅軸，打習慣紅軸的我喜歡這種線性手感</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4dc4ab52a7.jpg"><p>配色有三種配色：極光藍/宇治金時/薰衣紫，這款是極光藍的配色</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1b7f74c081.jpg"><p>盒內配件，鍵盤本體，拔鍵器，四顆替用軸，TYPEC 連接線，說明書</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c14555227e.jpg"><p>本體的重量為 812g 左右，做為小尺寸鍵盤還算是相當有份量的</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-dfe6885ed4.jpg"><p>鍵盤正面，少了中規中矩的鍵盤造型 K103R 沿著方向鍵採用多出來一小區塊的設計，讓鍵盤看起來有著一定比例的平衡</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-63967185c8.jpg"><p>鍵盤底部銘版以及二階段立腳</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-369165dffa.jpg"><p>鍵盤 TYPE-C 連接線，採用鍍金接頭，長度約有 180cm 左右</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-e620a51192.jpg"><p>拔鍵器與四個防塵莓紅軸，軸體都是隨著鍵盤的軸體附的，除了備用也可以拿去別的鍵盤裝上試試。</p><p>外觀</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-139c6a7253.jpg"><p>整體鍵盤造型，金色旋鈕特別突出，算是鍵盤的一個造型特色亮點。其他兩隻的鍵盤採用的會是黑色與銀色配色的旋鈕</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-41644070b6.jpg"><p>鍵盤背板操作開關，左側還有 2.4G 接收器的位置。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-b442c49f2f.jpg"><p>兩段式的立腳，可以輕鬆貼出平放，一段，跟比較高腳位的二段式立腳</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d7b68a5283.jpg"><p>擺放位置可以依個人喜好配置。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-432ee03edc.jpg"><p>操作開關可以切換為 2.4G、有線(OFF)、藍牙模式，另外也可以切成 MAC 系統用的操作按鍵</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-12fb4d7160.jpg"><p>2.4G 收納倉採用磁吸模式，可以很簡單的利用磁吸收納，要拔起的時候也不怕搞丟。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-993ac8eaf1.jpg"><p>鍵盤右側方向區向下突起的造型，讓每個按鍵都有合理的區間位置，如果不習慣緊湊位置鍵帽的人可以考慮看看這種配置。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-e433a4a351.jpg"><p>鍵盤側刻採用雷雕黑色注音刻字，稍微想看一下字的朋友也可以透過這個鍵帽來查看。另外 FN 功能鍵區的功能如下：</p><p>Fn + ESC：鍵盤鎖<br>Fn + Win：鎖定 Win 鍵<br>Fn + F1：顯示桌面<br>Fn + F2：Windows 鎖定<br>Fn + F3：搜尋<br>Fn + F4：小算盤</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ba563edf65.jpg"><p>Fn + F5：我的電腦<br>Fn + F6：E-Mail<br>Fn + F7：首頁<br>Fn + F8：多媒體播放器<br>Fn + F9：播放 / 暫停<br>Fn + F10：上一首<br>Fn + F11：停止<br>Fn + F12：下一首</p><p>智慧滾輪</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c7e8648f35.jpg"><p>智慧滾輪我想如果有用過的應該不陌生，IROCKS 給的 智慧滾輪遠比一般鍵盤給的音量滾輪功能多太多，這功能源自於微軟的 Surface Dial 轉輪功能，可在 Window 的裝置 &gt; 滾輪內做調整</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-fb976160cb.jpg"><p>只要電腦是 Windows10/11，都有這個智慧滾輪功能，這個智慧滾輪的主要功能有三種：音量調整、工作頁面、智慧滾輪，可以依照自己想要操作的定義去調整。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-62d603c261.jpg"><p>鍵盤的指示燈做在左上角，主要是大小寫指示燈、Win 鎖鍵指示燈、充電低店指示燈</p><p>換鍵軸</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-302c9174ab.jpg"><p>使用鍵盤附贈的拔鍵器鐵絲的部分，可以轉個角度將鍵帽拔下</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-034a84dacd.jpg"><p>粉紅色的就是鍵軸了。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7f26e4c867.jpg"><p>鍵軸的左右兩側各有一個小凹槽，利用拔鍵器的另一端，可以夾勾住鍵軸，直上直下就可以將鍵軸拔起</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7919a91cee.jpg"><p>由於鍵盤採用 Gasket 組件模式，整個鍵盤有多層次的疊加，所以拔起的底部看到定位版可能會有點浮浮的，主要應該還是吸音板的存在</p><p>Gasket <strong>結構</strong></p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7715ca385c.png"><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-df44244469.jpg"><p>鍵帽採用二射成形，可以清楚看到兩種顏色的塑料疊加，可以保證打字不掉字。</p><p>軟體</p><p>IROCKS依然還是一種鍵盤採用一個驅動<a href="https://www.i-rocks.com.tw/web/service/download_list_in.jsp?cp_id=CP1698977908744"> K103R應用軟體</a>，可以到官方網站去下載應用軟體安裝一下，來達到更多鍵盤的應用</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4578601dbb.gif"><p>軟體與以往的 IROCKS 推出的機械式鍵盤一樣，可以自訂設定檔，以及 FN 組合鍵都可以自訂，也可以錄製巨集鍵，配合 FN或是直接替換原鍵設定，利用軟體替換相當方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-421498689d.gif"><p>這次的燈光特效居然還有音樂律動，可以隨著系統的音效選擇律動，把鍵盤擺旁邊也是挺有視覺效果的</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="IROCKS K103R 發光" data-litespeed-src="https://www.youtube.com/embed/izd_5Gd73xg?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><p>整體</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-374ba1dcb1.jpg"><p>IROCKS K103R 相當有特色的是打字聲音，整體打起字來相當的清脆，縱使我這把鍵盤是線性的軸體，觸底所觸發的回饋聲音也是讓人打起字來相當的有感覺。</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="IROCKS K103R 打字測試" data-litespeed-src="https://www.youtube.com/embed/uwfnqOxtEyA?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><p>IROCKS K103R 整體來說，採用了Gasket結構讓按鍵回饋更Q彈，不管是哪種軸體，打起字來給予的回饋感都相當的不錯，定位版加上吸音棉減少了空洞的雜音，帶來的是更清脆明朗的敲擊聲。玩家更可以自己的喜好選擇想要的軸體以及配色，如果追求更高級的訂製，亦可以單獨購買軸體，來切換自己想要的自定義設定。</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mechanical-keyboard">機械鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]>
    </description>
    <content:encoded><![CDATA[<div><p>許久沒有開箱了，近年鍵盤的規格豐富程度實在是超乎我的想像，今天要開箱的就是 &nbsp;IROCKS K103R 無線機械式鍵盤，如標題所見，這款機械式鍵盤除了支援無線之外，還可以熱插拔替換你想要的軸體，尺寸來到 75 配列，算是短小鍵盤裡面還擁有 FN 區域功能鍵的配置，完整的方向鍵區域還帶有一個多功能旋鈕</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-43c3726f2f.jpg"><p>iRocks K103R 提供三種顏色，可搭配自己想要的手感選擇軸體，這款是防塵梅紅軸，打習慣紅軸的我喜歡這種線性手感</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4dc4ab52a7.jpg"><p>配色有三種配色：極光藍/宇治金時/薰衣紫，這款是極光藍的配色</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1b7f74c081.jpg"><p>盒內配件，鍵盤本體，拔鍵器，四顆替用軸，TYPEC 連接線，說明書</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c14555227e.jpg"><p>本體的重量為 812g 左右，做為小尺寸鍵盤還算是相當有份量的</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-dfe6885ed4.jpg"><p>鍵盤正面，少了中規中矩的鍵盤造型 K103R 沿著方向鍵採用多出來一小區塊的設計，讓鍵盤看起來有著一定比例的平衡</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-63967185c8.jpg"><p>鍵盤底部銘版以及二階段立腳</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-369165dffa.jpg"><p>鍵盤 TYPE-C 連接線，採用鍍金接頭，長度約有 180cm 左右</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-e620a51192.jpg"><p>拔鍵器與四個防塵莓紅軸，軸體都是隨著鍵盤的軸體附的，除了備用也可以拿去別的鍵盤裝上試試。</p><p>外觀</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-139c6a7253.jpg"><p>整體鍵盤造型，金色旋鈕特別突出，算是鍵盤的一個造型特色亮點。其他兩隻的鍵盤採用的會是黑色與銀色配色的旋鈕</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-41644070b6.jpg"><p>鍵盤背板操作開關，左側還有 2.4G 接收器的位置。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-b442c49f2f.jpg"><p>兩段式的立腳，可以輕鬆貼出平放，一段，跟比較高腳位的二段式立腳</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d7b68a5283.jpg"><p>擺放位置可以依個人喜好配置。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-432ee03edc.jpg"><p>操作開關可以切換為 2.4G、有線(OFF)、藍牙模式，另外也可以切成 MAC 系統用的操作按鍵</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-12fb4d7160.jpg"><p>2.4G 收納倉採用磁吸模式，可以很簡單的利用磁吸收納，要拔起的時候也不怕搞丟。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-993ac8eaf1.jpg"><p>鍵盤右側方向區向下突起的造型，讓每個按鍵都有合理的區間位置，如果不習慣緊湊位置鍵帽的人可以考慮看看這種配置。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-e433a4a351.jpg"><p>鍵盤側刻採用雷雕黑色注音刻字，稍微想看一下字的朋友也可以透過這個鍵帽來查看。另外 FN 功能鍵區的功能如下：</p><p>Fn + ESC：鍵盤鎖<br>Fn + Win：鎖定 Win 鍵<br>Fn + F1：顯示桌面<br>Fn + F2：Windows 鎖定<br>Fn + F3：搜尋<br>Fn + F4：小算盤</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ba563edf65.jpg"><p>Fn + F5：我的電腦<br>Fn + F6：E-Mail<br>Fn + F7：首頁<br>Fn + F8：多媒體播放器<br>Fn + F9：播放 / 暫停<br>Fn + F10：上一首<br>Fn + F11：停止<br>Fn + F12：下一首</p><p>智慧滾輪</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c7e8648f35.jpg"><p>智慧滾輪我想如果有用過的應該不陌生，IROCKS 給的 智慧滾輪遠比一般鍵盤給的音量滾輪功能多太多，這功能源自於微軟的 Surface Dial 轉輪功能，可在 Window 的裝置 &gt; 滾輪內做調整</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-fb976160cb.jpg"><p>只要電腦是 Windows10/11，都有這個智慧滾輪功能，這個智慧滾輪的主要功能有三種：音量調整、工作頁面、智慧滾輪，可以依照自己想要操作的定義去調整。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-62d603c261.jpg"><p>鍵盤的指示燈做在左上角，主要是大小寫指示燈、Win 鎖鍵指示燈、充電低店指示燈</p><p>換鍵軸</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-302c9174ab.jpg"><p>使用鍵盤附贈的拔鍵器鐵絲的部分，可以轉個角度將鍵帽拔下</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-034a84dacd.jpg"><p>粉紅色的就是鍵軸了。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7f26e4c867.jpg"><p>鍵軸的左右兩側各有一個小凹槽，利用拔鍵器的另一端，可以夾勾住鍵軸，直上直下就可以將鍵軸拔起</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7919a91cee.jpg"><p>由於鍵盤採用 Gasket 組件模式，整個鍵盤有多層次的疊加，所以拔起的底部看到定位版可能會有點浮浮的，主要應該還是吸音板的存在</p><p>Gasket <strong>結構</strong></p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7715ca385c.png"><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-df44244469.jpg"><p>鍵帽採用二射成形，可以清楚看到兩種顏色的塑料疊加，可以保證打字不掉字。</p><p>軟體</p><p>IROCKS依然還是一種鍵盤採用一個驅動<a href="https://www.i-rocks.com.tw/web/service/download_list_in.jsp?cp_id=CP1698977908744"> K103R應用軟體</a>，可以到官方網站去下載應用軟體安裝一下，來達到更多鍵盤的應用</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4578601dbb.gif"><p>軟體與以往的 IROCKS 推出的機械式鍵盤一樣，可以自訂設定檔，以及 FN 組合鍵都可以自訂，也可以錄製巨集鍵，配合 FN或是直接替換原鍵設定，利用軟體替換相當方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-421498689d.gif"><p>這次的燈光特效居然還有音樂律動，可以隨著系統的音效選擇律動，把鍵盤擺旁邊也是挺有視覺效果的</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="IROCKS K103R 發光" data-litespeed-src="https://www.youtube.com/embed/izd_5Gd73xg?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><p>整體</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-374ba1dcb1.jpg"><p>IROCKS K103R 相當有特色的是打字聲音，整體打起字來相當的清脆，縱使我這把鍵盤是線性的軸體，觸底所觸發的回饋聲音也是讓人打起字來相當的有感覺。</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="IROCKS K103R 打字測試" data-litespeed-src="https://www.youtube.com/embed/uwfnqOxtEyA?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><p>IROCKS K103R 整體來說，採用了Gasket結構讓按鍵回饋更Q彈，不管是哪種軸體，打起字來給予的回饋感都相當的不錯，定位版加上吸音棉減少了空洞的雜音，帶來的是更清脆明朗的敲擊聲。玩家更可以自己的喜好選擇想要的軸體以及配色，如果追求更高級的訂製，亦可以單獨購買軸體，來切換自己想要的自定義設定。</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mechanical-keyboard">機械鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-43c3726f2f.jpg"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-43c3726f2f.jpg" medium="image"/>
    <pubDate>Mon, 31 Mar 2025 01:30:00 +0000</pubDate>
  </item><item>
    <title><![CDATA[[開箱] IROCKS-K85R 無線機械鍵盤]]></title>
    <link>https://mesak.tw/hardware/keyboard/12047/irocks-k85r-wireless-keyboard</link>
    <itunes:title><![CDATA[[開箱] IROCKS-K85R 無線機械鍵盤]]></itunes:title>
    <itunes:author><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[<div><p>最近一直想要組一把 無線的 980 配置鍵盤，弄了很多配件卻遲遲沒有動手，直到最近看到 IROCKS 推出一款新的 980 配置無線鍵盤，直接省去了我想要組裝的念頭， 980 加上無線根本正中我的下懷。加上獨立的螢幕數位顯示內容、多功能轉盤，把過去鍵盤推出的優點以及新的特色都給整合進去了，實在是相當的心動，只接打消我想要 DIY 的念頭，直接實際帶回，應用個幾周之後，分享一下開箱的心得。</p><h2>外觀開箱</h2><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-47d96ad869.jpg"><p>irocks K85R 外盒，這把是黑白配色，盒子上有標註特點，這把鍵盤是 2.4G有線無線雙模鍵盤</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-04720fdc84.jpg"><p>盒背詳細的列出規格特色</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c1f3081bdb.jpg"><p>irocks K85R 靜音奶茶軸 採用 IROCKS自有軸，奶茶軸分類為有段落的軸體</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3bdab8ac85.jpg"><p>純黑的盒子，上側壓印 LOGO</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ffafcd64b1.jpg"><p>盒內的所有配件，說明書、四個備用軸體、180cm 的 USB-C 傳輸線、拔軸器+拔鍵器、鍵盤本體</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-8b8b822ce3.jpg"><p>鍵盤的正面以及背面照，背部有收納接收器的位置，還有實體切換開關的設計</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0132f0609a.jpg"><p>鍵盤的兩段式立腳拖，可以提供 2 段傾斜高度</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-5b5c6428cf.jpg"><p>背部銘版標示型號以及 SN，還有 NCC 無線認證編號，這邊也可以看到實體的按鈕跟鍵盤接收器的收納倉</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a77447cf77.jpg"><p>鍵盤整體採用 980 Layout ，是介於 80% 鍵盤與全尺寸鍵盤之間的一種中間值，對於不常使用 六格功能鍵區，又常打數字區域的朋友，這尺寸算是小於全尺寸又不失功能性輸入的一個不錯的佈局</p><h2>Gasket 支撐結構</h2><p>鍵盤採用 Gasket 支撐結構，長期有在關注鍵盤的玩家一定知道，Gasket 支撐結構會讓打字的手感帶來全然不同的感受，原本的鍵軸會因為鍵盤的結構產生不同的回饋手感。 K85R 的 Gasket 設計採用矽膠結構，配合多層次的結構讓整體帶來相當溫和的手感，矽膠組件在 PCB 穩定上，給予的手感都是相當溫和、回彈力相當好的手感，減少空洞敲底那種敲門的手感，配合不同軸體都可以帶來不同的感受。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d1009544c5.png"><h2>軸體更換</h2><p>irocks K85R 採用熱插拔結構，可以藉由盒內附上的配件，拔鍵器拔除鍵帽，利用另一個方向的拔軸器來拔除軸體，更換想要替換的軸體，或是替換有問題的軸體。</p><p>現在軸體五花八門，什麼都可以拿來試試，買一把可以交替軸體的鍵盤真的是玩家的一大福音，打一段時間哪個區域的軸體想換就換，目前這是我稍微買的幾款軸，大多都是線性軸體，玩軸的話大概就分兩種，線性跟段落，這兩總又分為有聲跟無聲，傳統的 Cherry 軸體就是 青軸 =&gt; 有聲段落，紅軸 =&gt; 較無聲段落，茶軸為於中間，打久了就能找到自己的路。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9a0182e307.jpg"><p>鍵盤內部會附上四個同樣類型的軸體，方便如果出了問題之後可以替換，這邊我是準備自己的軸體來替換</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-61d8fb79b0.jpg"><p>想要交換軸體，只需要針對軸體的上下處凹槽溝，利用附上的拔鍵器，先拔除鍵帽在拔除軸體，軸體就很容易可以拔除下來。拔的時候要稍微注意 Gasket 的支撐結構，不要壓得太大力，拔除也要注意扭動的方向，直上直下比較不會對鍵盤、軸體損壞</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-10b5b39e51.jpg"><p>拔下之後，只需要針對燈的方向安裝新的軸體即可，雖然是熱插拔的軸體，但本身我還是建議關閉電源再進行替換。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a834eac3c1.jpg"><p>換上自己想要換的軸體，就可以感受新的打感體驗。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4a031c77ad.jpg"><p>廠商軸體越來越多了，如果有自己喜歡的類型也可以挑選一個不錯的基底，打造一把屬於自己配置的鍵盤。</p><h2>鍵盤內建軟體</h2><p>鍵盤一樣配有軟體可以自定義調整鍵盤的設定，透過<a href="https://irocks.myqnapcloud.com:10443/webdav/App/K85R%20%20Application%20Software_Firmware.zip">官方網站下載</a>就可以抓到 IROCKS K85R 無線應用程式</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-55b3f77b80.gif"><p>鍵盤支援幾種設定，自定義鍵盤設定檔、巨集錄製、燈校調整、燈光自訂、自訂背光模式、設定音樂律動模式、以及小螢幕的 動態圖片替換，圖片支援 GIF 匯入的模式，最大支援 96 幀，匯入的時候多餘的按鈕都會被清除</p><p>這邊把網友 <a href="https://twitter.com/Mant0uStudio">Mant0u</a> 製作的可愛饅頭動態圖給放上，感謝提供動態圖片</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="irock K85R GIF LOGO" data-litespeed-src="https://www.youtube.com/embed/1xIMYOcCnx4?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><figcaption>動態圖片</figcaption><p>LCD 影片可以放自己喜歡的影片，或是照片，解析度也不差，當然就是小了點，但是又不失一種有趣的氣氛。</p><h2>鍵盤按鈕設定</h2><p>鍵盤內建的軟體，可以自定義一些個人化的配置，與以往不同的是，鍵盤上多了一個小螢幕，可以讓個人化配置的設定更容易操作，藉由螢幕加上旋鈕的操作，讓人更容易針對可異動的項目做出選擇。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3f4193b3d6.jpg"><p>透過 設定的按鈕鍵可以進入設定的選項，依序可以切換 連接方式、系統配置、燈光效果、燈光顏色、燈光亮度、燈光速度，語言切換、跟主頁設定。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0210440185.jpg"><p>直接按下上面設定的按鈕會出現：音量調整、工作頁面、智慧滾輪，這邊可以直接設定滾輪的預設滾動效果</p><h1>鍵盤旋鈕功能操作</h1><p>旋鈕的功能有三種：音量調整、工作頁面、智慧滾輪，其中音量調整就是屬於最常見的系統音量大小聲調整，單點就是靜音以及恢復音效，工作頁面呢，則是 WINDOWS 視窗切換，智慧滾輪則是應用了 Windows 10 以後內建的滾輪設備，進入開始，設定，點到藍牙與裝置項目，如果你的電腦已經連接，這邊就多一個滾輪的項目可以調整</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-fb976160cb.jpg"><p>設定好內容之後，只需要滾輪先下壓，觸發單點之後不要鬆開，接著左右滾動，放掉就可以切換到你想要的功能，至於這個滾滾輪選單，似乎在每個畫面中都有所不同，如果在檔案總管下只會有音量與音樂調整，如果在網頁中就有六種功能可以選擇，每種項目都不太一樣，必須要依照個人的需求來做調整喔。</p><h1>小結</h1><p>IROCKS 自從有了無線機械式鍵盤之後，產品線也越來越豐富，LCD 的機械式鍵盤，在市場上還並沒有相當多樣，常常使用機械式鍵盤都要記住每一把鍵盤的各種快速鍵跟特性，這把 K85R 直接整合了這種燈校快速鍵，以及一些基本的切換，結合 滾輪的功能，大大的增加使用使用體驗的可能性，個性化 動態圖案又更能讓每個玩家的鍵盤得到自己想要的特色，不僅鍵帽、鍵軸快速鍵可以自訂，顯示的介面也可以客製化，真的是可玩性相當高的一把鍵盤，有興趣的玩家一定要記得先嘗試手感，在考慮入手。</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mechanical-keyboard">機械鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]>
    </itunes:summary>
    <description>
      <![CDATA[<div><p>最近一直想要組一把 無線的 980 配置鍵盤，弄了很多配件卻遲遲沒有動手，直到最近看到 IROCKS 推出一款新的 980 配置無線鍵盤，直接省去了我想要組裝的念頭， 980 加上無線根本正中我的下懷。加上獨立的螢幕數位顯示內容、多功能轉盤，把過去鍵盤推出的優點以及新的特色都給整合進去了，實在是相當的心動，只接打消我想要 DIY 的念頭，直接實際帶回，應用個幾周之後，分享一下開箱的心得。</p><h2>外觀開箱</h2><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-47d96ad869.jpg"><p>irocks K85R 外盒，這把是黑白配色，盒子上有標註特點，這把鍵盤是 2.4G有線無線雙模鍵盤</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-04720fdc84.jpg"><p>盒背詳細的列出規格特色</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c1f3081bdb.jpg"><p>irocks K85R 靜音奶茶軸 採用 IROCKS自有軸，奶茶軸分類為有段落的軸體</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3bdab8ac85.jpg"><p>純黑的盒子，上側壓印 LOGO</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ffafcd64b1.jpg"><p>盒內的所有配件，說明書、四個備用軸體、180cm 的 USB-C 傳輸線、拔軸器+拔鍵器、鍵盤本體</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-8b8b822ce3.jpg"><p>鍵盤的正面以及背面照，背部有收納接收器的位置，還有實體切換開關的設計</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0132f0609a.jpg"><p>鍵盤的兩段式立腳拖，可以提供 2 段傾斜高度</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-5b5c6428cf.jpg"><p>背部銘版標示型號以及 SN，還有 NCC 無線認證編號，這邊也可以看到實體的按鈕跟鍵盤接收器的收納倉</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a77447cf77.jpg"><p>鍵盤整體採用 980 Layout ，是介於 80% 鍵盤與全尺寸鍵盤之間的一種中間值，對於不常使用 六格功能鍵區，又常打數字區域的朋友，這尺寸算是小於全尺寸又不失功能性輸入的一個不錯的佈局</p><h2>Gasket 支撐結構</h2><p>鍵盤採用 Gasket 支撐結構，長期有在關注鍵盤的玩家一定知道，Gasket 支撐結構會讓打字的手感帶來全然不同的感受，原本的鍵軸會因為鍵盤的結構產生不同的回饋手感。 K85R 的 Gasket 設計採用矽膠結構，配合多層次的結構讓整體帶來相當溫和的手感，矽膠組件在 PCB 穩定上，給予的手感都是相當溫和、回彈力相當好的手感，減少空洞敲底那種敲門的手感，配合不同軸體都可以帶來不同的感受。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d1009544c5.png"><h2>軸體更換</h2><p>irocks K85R 採用熱插拔結構，可以藉由盒內附上的配件，拔鍵器拔除鍵帽，利用另一個方向的拔軸器來拔除軸體，更換想要替換的軸體，或是替換有問題的軸體。</p><p>現在軸體五花八門，什麼都可以拿來試試，買一把可以交替軸體的鍵盤真的是玩家的一大福音，打一段時間哪個區域的軸體想換就換，目前這是我稍微買的幾款軸，大多都是線性軸體，玩軸的話大概就分兩種，線性跟段落，這兩總又分為有聲跟無聲，傳統的 Cherry 軸體就是 青軸 =&gt; 有聲段落，紅軸 =&gt; 較無聲段落，茶軸為於中間，打久了就能找到自己的路。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9a0182e307.jpg"><p>鍵盤內部會附上四個同樣類型的軸體，方便如果出了問題之後可以替換，這邊我是準備自己的軸體來替換</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-61d8fb79b0.jpg"><p>想要交換軸體，只需要針對軸體的上下處凹槽溝，利用附上的拔鍵器，先拔除鍵帽在拔除軸體，軸體就很容易可以拔除下來。拔的時候要稍微注意 Gasket 的支撐結構，不要壓得太大力，拔除也要注意扭動的方向，直上直下比較不會對鍵盤、軸體損壞</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-10b5b39e51.jpg"><p>拔下之後，只需要針對燈的方向安裝新的軸體即可，雖然是熱插拔的軸體，但本身我還是建議關閉電源再進行替換。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a834eac3c1.jpg"><p>換上自己想要換的軸體，就可以感受新的打感體驗。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4a031c77ad.jpg"><p>廠商軸體越來越多了，如果有自己喜歡的類型也可以挑選一個不錯的基底，打造一把屬於自己配置的鍵盤。</p><h2>鍵盤內建軟體</h2><p>鍵盤一樣配有軟體可以自定義調整鍵盤的設定，透過<a href="https://irocks.myqnapcloud.com:10443/webdav/App/K85R%20%20Application%20Software_Firmware.zip">官方網站下載</a>就可以抓到 IROCKS K85R 無線應用程式</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-55b3f77b80.gif"><p>鍵盤支援幾種設定，自定義鍵盤設定檔、巨集錄製、燈校調整、燈光自訂、自訂背光模式、設定音樂律動模式、以及小螢幕的 動態圖片替換，圖片支援 GIF 匯入的模式，最大支援 96 幀，匯入的時候多餘的按鈕都會被清除</p><p>這邊把網友 <a href="https://twitter.com/Mant0uStudio">Mant0u</a> 製作的可愛饅頭動態圖給放上，感謝提供動態圖片</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="irock K85R GIF LOGO" data-litespeed-src="https://www.youtube.com/embed/1xIMYOcCnx4?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><figcaption>動態圖片</figcaption><p>LCD 影片可以放自己喜歡的影片，或是照片，解析度也不差，當然就是小了點，但是又不失一種有趣的氣氛。</p><h2>鍵盤按鈕設定</h2><p>鍵盤內建的軟體，可以自定義一些個人化的配置，與以往不同的是，鍵盤上多了一個小螢幕，可以讓個人化配置的設定更容易操作，藉由螢幕加上旋鈕的操作，讓人更容易針對可異動的項目做出選擇。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3f4193b3d6.jpg"><p>透過 設定的按鈕鍵可以進入設定的選項，依序可以切換 連接方式、系統配置、燈光效果、燈光顏色、燈光亮度、燈光速度，語言切換、跟主頁設定。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0210440185.jpg"><p>直接按下上面設定的按鈕會出現：音量調整、工作頁面、智慧滾輪，這邊可以直接設定滾輪的預設滾動效果</p><h1>鍵盤旋鈕功能操作</h1><p>旋鈕的功能有三種：音量調整、工作頁面、智慧滾輪，其中音量調整就是屬於最常見的系統音量大小聲調整，單點就是靜音以及恢復音效，工作頁面呢，則是 WINDOWS 視窗切換，智慧滾輪則是應用了 Windows 10 以後內建的滾輪設備，進入開始，設定，點到藍牙與裝置項目，如果你的電腦已經連接，這邊就多一個滾輪的項目可以調整</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-fb976160cb.jpg"><p>設定好內容之後，只需要滾輪先下壓，觸發單點之後不要鬆開，接著左右滾動，放掉就可以切換到你想要的功能，至於這個滾滾輪選單，似乎在每個畫面中都有所不同，如果在檔案總管下只會有音量與音樂調整，如果在網頁中就有六種功能可以選擇，每種項目都不太一樣，必須要依照個人的需求來做調整喔。</p><h1>小結</h1><p>IROCKS 自從有了無線機械式鍵盤之後，產品線也越來越豐富，LCD 的機械式鍵盤，在市場上還並沒有相當多樣，常常使用機械式鍵盤都要記住每一把鍵盤的各種快速鍵跟特性，這把 K85R 直接整合了這種燈校快速鍵，以及一些基本的切換，結合 滾輪的功能，大大的增加使用使用體驗的可能性，個性化 動態圖案又更能讓每個玩家的鍵盤得到自己想要的特色，不僅鍵帽、鍵軸快速鍵可以自訂，顯示的介面也可以客製化，真的是可玩性相當高的一把鍵盤，有興趣的玩家一定要記得先嘗試手感，在考慮入手。</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mechanical-keyboard">機械鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]>
    </description>
    <content:encoded><![CDATA[<div><p>最近一直想要組一把 無線的 980 配置鍵盤，弄了很多配件卻遲遲沒有動手，直到最近看到 IROCKS 推出一款新的 980 配置無線鍵盤，直接省去了我想要組裝的念頭， 980 加上無線根本正中我的下懷。加上獨立的螢幕數位顯示內容、多功能轉盤，把過去鍵盤推出的優點以及新的特色都給整合進去了，實在是相當的心動，只接打消我想要 DIY 的念頭，直接實際帶回，應用個幾周之後，分享一下開箱的心得。</p><h2>外觀開箱</h2><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-47d96ad869.jpg"><p>irocks K85R 外盒，這把是黑白配色，盒子上有標註特點，這把鍵盤是 2.4G有線無線雙模鍵盤</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-04720fdc84.jpg"><p>盒背詳細的列出規格特色</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-c1f3081bdb.jpg"><p>irocks K85R 靜音奶茶軸 採用 IROCKS自有軸，奶茶軸分類為有段落的軸體</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3bdab8ac85.jpg"><p>純黑的盒子，上側壓印 LOGO</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ffafcd64b1.jpg"><p>盒內的所有配件，說明書、四個備用軸體、180cm 的 USB-C 傳輸線、拔軸器+拔鍵器、鍵盤本體</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-8b8b822ce3.jpg"><p>鍵盤的正面以及背面照，背部有收納接收器的位置，還有實體切換開關的設計</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0132f0609a.jpg"><p>鍵盤的兩段式立腳拖，可以提供 2 段傾斜高度</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-5b5c6428cf.jpg"><p>背部銘版標示型號以及 SN，還有 NCC 無線認證編號，這邊也可以看到實體的按鈕跟鍵盤接收器的收納倉</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a77447cf77.jpg"><p>鍵盤整體採用 980 Layout ，是介於 80% 鍵盤與全尺寸鍵盤之間的一種中間值，對於不常使用 六格功能鍵區，又常打數字區域的朋友，這尺寸算是小於全尺寸又不失功能性輸入的一個不錯的佈局</p><h2>Gasket 支撐結構</h2><p>鍵盤採用 Gasket 支撐結構，長期有在關注鍵盤的玩家一定知道，Gasket 支撐結構會讓打字的手感帶來全然不同的感受，原本的鍵軸會因為鍵盤的結構產生不同的回饋手感。 K85R 的 Gasket 設計採用矽膠結構，配合多層次的結構讓整體帶來相當溫和的手感，矽膠組件在 PCB 穩定上，給予的手感都是相當溫和、回彈力相當好的手感，減少空洞敲底那種敲門的手感，配合不同軸體都可以帶來不同的感受。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d1009544c5.png"><h2>軸體更換</h2><p>irocks K85R 採用熱插拔結構，可以藉由盒內附上的配件，拔鍵器拔除鍵帽，利用另一個方向的拔軸器來拔除軸體，更換想要替換的軸體，或是替換有問題的軸體。</p><p>現在軸體五花八門，什麼都可以拿來試試，買一把可以交替軸體的鍵盤真的是玩家的一大福音，打一段時間哪個區域的軸體想換就換，目前這是我稍微買的幾款軸，大多都是線性軸體，玩軸的話大概就分兩種，線性跟段落，這兩總又分為有聲跟無聲，傳統的 Cherry 軸體就是 青軸 =&gt; 有聲段落，紅軸 =&gt; 較無聲段落，茶軸為於中間，打久了就能找到自己的路。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9a0182e307.jpg"><p>鍵盤內部會附上四個同樣類型的軸體，方便如果出了問題之後可以替換，這邊我是準備自己的軸體來替換</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-61d8fb79b0.jpg"><p>想要交換軸體，只需要針對軸體的上下處凹槽溝，利用附上的拔鍵器，先拔除鍵帽在拔除軸體，軸體就很容易可以拔除下來。拔的時候要稍微注意 Gasket 的支撐結構，不要壓得太大力，拔除也要注意扭動的方向，直上直下比較不會對鍵盤、軸體損壞</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-10b5b39e51.jpg"><p>拔下之後，只需要針對燈的方向安裝新的軸體即可，雖然是熱插拔的軸體，但本身我還是建議關閉電源再進行替換。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a834eac3c1.jpg"><p>換上自己想要換的軸體，就可以感受新的打感體驗。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4a031c77ad.jpg"><p>廠商軸體越來越多了，如果有自己喜歡的類型也可以挑選一個不錯的基底，打造一把屬於自己配置的鍵盤。</p><h2>鍵盤內建軟體</h2><p>鍵盤一樣配有軟體可以自定義調整鍵盤的設定，透過<a href="https://irocks.myqnapcloud.com:10443/webdav/App/K85R%20%20Application%20Software_Firmware.zip">官方網站下載</a>就可以抓到 IROCKS K85R 無線應用程式</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-55b3f77b80.gif"><p>鍵盤支援幾種設定，自定義鍵盤設定檔、巨集錄製、燈校調整、燈光自訂、自訂背光模式、設定音樂律動模式、以及小螢幕的 動態圖片替換，圖片支援 GIF 匯入的模式，最大支援 96 幀，匯入的時候多餘的按鈕都會被清除</p><p>這邊把網友 <a href="https://twitter.com/Mant0uStudio">Mant0u</a> 製作的可愛饅頭動態圖給放上，感謝提供動態圖片</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="irock K85R GIF LOGO" data-litespeed-src="https://www.youtube.com/embed/1xIMYOcCnx4?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><figcaption>動態圖片</figcaption><p>LCD 影片可以放自己喜歡的影片，或是照片，解析度也不差，當然就是小了點，但是又不失一種有趣的氣氛。</p><h2>鍵盤按鈕設定</h2><p>鍵盤內建的軟體，可以自定義一些個人化的配置，與以往不同的是，鍵盤上多了一個小螢幕，可以讓個人化配置的設定更容易操作，藉由螢幕加上旋鈕的操作，讓人更容易針對可異動的項目做出選擇。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3f4193b3d6.jpg"><p>透過 設定的按鈕鍵可以進入設定的選項，依序可以切換 連接方式、系統配置、燈光效果、燈光顏色、燈光亮度、燈光速度，語言切換、跟主頁設定。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0210440185.jpg"><p>直接按下上面設定的按鈕會出現：音量調整、工作頁面、智慧滾輪，這邊可以直接設定滾輪的預設滾動效果</p><h1>鍵盤旋鈕功能操作</h1><p>旋鈕的功能有三種：音量調整、工作頁面、智慧滾輪，其中音量調整就是屬於最常見的系統音量大小聲調整，單點就是靜音以及恢復音效，工作頁面呢，則是 WINDOWS 視窗切換，智慧滾輪則是應用了 Windows 10 以後內建的滾輪設備，進入開始，設定，點到藍牙與裝置項目，如果你的電腦已經連接，這邊就多一個滾輪的項目可以調整</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-fb976160cb.jpg"><p>設定好內容之後，只需要滾輪先下壓，觸發單點之後不要鬆開，接著左右滾動，放掉就可以切換到你想要的功能，至於這個滾滾輪選單，似乎在每個畫面中都有所不同，如果在檔案總管下只會有音量與音樂調整，如果在網頁中就有六種功能可以選擇，每種項目都不太一樣，必須要依照個人的需求來做調整喔。</p><h1>小結</h1><p>IROCKS 自從有了無線機械式鍵盤之後，產品線也越來越豐富，LCD 的機械式鍵盤，在市場上還並沒有相當多樣，常常使用機械式鍵盤都要記住每一把鍵盤的各種快速鍵跟特性，這把 K85R 直接整合了這種燈校快速鍵，以及一些基本的切換，結合 滾輪的功能，大大的增加使用使用體驗的可能性，個性化 動態圖案又更能讓每個玩家的鍵盤得到自己想要的特色，不僅鍵帽、鍵軸快速鍵可以自訂，顯示的介面也可以客製化，真的是可玩性相當高的一把鍵盤，有興趣的玩家一定要記得先嘗試手感，在考慮入手。</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mechanical-keyboard">機械鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-47d96ad869.jpg"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-47d96ad869.jpg" medium="image"/>
    <pubDate>Wed, 24 Apr 2024 12:38:39 +0000</pubDate>
  </item><item>
    <title><![CDATA[[開箱] IROCKS K75M 銀色上蓋機械式鍵盤]]></title>
    <link>https://mesak.tw/hardware/keyboard/12032/irocks-k75ms</link>
    <itunes:title><![CDATA[[開箱] IROCKS K75M 銀色上蓋機械式鍵盤]]></itunes:title>
    <itunes:author><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[<div><p>IROCKS K75M 這款鍵盤推出了四年左右了，最早是先推出 <a href="https://mesak.tw/hardware/keyboard/10261/irocks-k75m">粉紅色</a>特別版，接著在推出規格小提升的 PBT<a href="https://mesak.tw/hardware/keyboard/10959/irocks-k75m-black"> 黑色版</a>，陸續也有一基本款的出現，純白色的 K75M 更能打中白色控朋友們的胃口，以及銀色上蓋接近白色的 K75M</p><p>K75M 採用 雙色成型鍵帽，德國 Cherry MX 軸體 紅軸茶軸青軸可供選擇，支援 NKRO 全鍵不衝突功能，按鍵更有多媒體快捷鍵設計，硬體巨集錄製功能，鍵盤燈色與側燈發光，上蓋採用金屬面板，懸浮式鍵盤設計。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-93ee88e6e0.jpg"><p>K75M 白色/銀色 有多種配置可選擇，軸體有 青軸 紅軸 茶軸 分別，購買的時候要特別注意是自己想要的規格再下手，白色與銀色最明顯的就是價差 白色搭配的是 PBT 鍵帽，銀色則不是。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-62ae412780.jpg"><p>鍵盤盒子的背面註明規格</p><ul><li>產品型號 : IRK75MS</li><li>產品名稱 : 背光機械鍵盤</li><li>介&nbsp; 面 : USB ( Full Speed )</li><li>按鍵數 : 104 鍵</li><li>開關形式 : Cherry / Gateron 機械開關</li><li>按鍵行程 : 4.0mm</li><li>全區防鬼鍵設計 (NKRO)</li><li>多媒體鍵 : 14 鍵</li><li>背光特效鍵 : 8 鍵</li><li>電壓 / 電流 : DC 5V / 250 mA Max.</li><li>產品重量 : 約870公克</li><li>USB 線長 : 約180 公分</li><li>產品尺寸: 438 (L) X 136 (W) X 40.5 (H)mm</li><li>產品保固 : Cherry軸 2年保固</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-37fab286bf.jpg"><p>鍵盤採用懸浮式設計，上蓋為底蓋，按鍵更明顯突出。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-05bf189ca8.jpg"><p>鍵盤底部相當簡潔，止滑墊分布鍵盤兩側，下半部分給的止滑墊與立腳的止滑墊同樣材質。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1e1bc8a386.jpg"><p>立腳採用的也是一般的 8° 高度。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-b9deb86aa2.jpg"><p>傳輸線加上防塵套，內容也是鍍金接頭</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-17d16567cb.jpg"><p>鍵帽採用二色成型透光度在白天開燈的情況也算是不錯。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-72c18cec4d.jpg"><p>配置的快速鍵印字還算清晰，白色鍵帽在黑色的印字相當明顯，注音字根的字樣不會過於突出搶了白色的風采，相關的快速鍵配置如下：</p><ul><li>FN+F1：開啟預設多媒體播放軟體</li><li>FN+F2：調整音量小聲</li><li>FN+F3：調整音量大聲</li><li>FN+F4：音量靜音</li><li>FN+F5：停止播放</li><li>FN+F6：上一首</li><li>FN+F7：播放/暫停</li><li>FN+F8：下一首</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-bc16903b1e.jpg"><p>鍵盤雖然是白色系銀上蓋的白光的配置，但是燈光的效果一點也不馬虎</p><ul><li>FN+F9：預設EMAIL軟體</li><li>FN+F10：開啟預設瀏覽器</li><li>FN+F11：開啟小算盤(計算機)</li><li>FN+F12：鎖定電腦( 等同 WIN+L )</li><li>FN+WIN：開關視窗鍵</li><li>FN+ESC：開關全鍵盤鎖定，鎖定狀態中 4個LED會慢閃</li><li>FN+SCRLK：開啟/關閉 側發光特效</li><li>FN+INS： 切換側邊發光特效( 共三種特效 )</li><li>FN+HOME：光跡追蹤 ( 6種效果切換)</li><li>FN+PGUP：背光恆亮及呼吸切換</li><li>FN+DEL：自訂背光模式<ul><li>自訂背光模式共可以儲存 10 組，儲存在鍵盤上方的 1~0位置</li><li>按壓FN+數字就會自動切換到該組自訂背光</li><li>FN+CTRL+DEL：按下之後會啟動背光錄製模式<br>按壓想要發光的按鍵<br>再次按壓 FN+CTRL+DEL儲存</li><li>按壓FN+DEL 會顯示最後一次背光色</li></ul></li><li>FN+END：背光特效A ( 共5組特效切換 )</li><li>FN+PGDN：背光特效B ( 共5組特效切換 )</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0334ae0208.jpg"><p>銀色上蓋的 LOGO印字為銀色，光照之下會稍微反光</p><p>燈光的特色可以參考這個影片。</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="irocks K75M - 銀色上蓋單色背光機械式鍵盤" data-litespeed-src="https://www.youtube.com/embed/xOABVreXDrQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><p>這次測試的是 K75M Cherry 紅軸，紅軸的手感就是直上直下，很少有阻力感，加上 CHERRY 提供穩定的品質，確保每個產品的手感的一致性。</p><p>懸浮式鍵盤的設計就是鍵盤的上蓋組成，降低到定位版的高度，讓鍵盤整體的造型更加簡潔，側邊採用了發光設計，讓側邊收邊的地方追加背光的特效，顯得更有特色，整體背光造型的樣式雖然是銀色上蓋，但是搭配白色組合也是相當不錯的搭配。</p><p>對這款鍵盤有興趣的朋友可以先去賣場試試手感再考慮下單。</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mechanical-keyboard">機械鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]>
    </itunes:summary>
    <description>
      <![CDATA[<div><p>IROCKS K75M 這款鍵盤推出了四年左右了，最早是先推出 <a href="https://mesak.tw/hardware/keyboard/10261/irocks-k75m">粉紅色</a>特別版，接著在推出規格小提升的 PBT<a href="https://mesak.tw/hardware/keyboard/10959/irocks-k75m-black"> 黑色版</a>，陸續也有一基本款的出現，純白色的 K75M 更能打中白色控朋友們的胃口，以及銀色上蓋接近白色的 K75M</p><p>K75M 採用 雙色成型鍵帽，德國 Cherry MX 軸體 紅軸茶軸青軸可供選擇，支援 NKRO 全鍵不衝突功能，按鍵更有多媒體快捷鍵設計，硬體巨集錄製功能，鍵盤燈色與側燈發光，上蓋採用金屬面板，懸浮式鍵盤設計。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-93ee88e6e0.jpg"><p>K75M 白色/銀色 有多種配置可選擇，軸體有 青軸 紅軸 茶軸 分別，購買的時候要特別注意是自己想要的規格再下手，白色與銀色最明顯的就是價差 白色搭配的是 PBT 鍵帽，銀色則不是。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-62ae412780.jpg"><p>鍵盤盒子的背面註明規格</p><ul><li>產品型號 : IRK75MS</li><li>產品名稱 : 背光機械鍵盤</li><li>介&nbsp; 面 : USB ( Full Speed )</li><li>按鍵數 : 104 鍵</li><li>開關形式 : Cherry / Gateron 機械開關</li><li>按鍵行程 : 4.0mm</li><li>全區防鬼鍵設計 (NKRO)</li><li>多媒體鍵 : 14 鍵</li><li>背光特效鍵 : 8 鍵</li><li>電壓 / 電流 : DC 5V / 250 mA Max.</li><li>產品重量 : 約870公克</li><li>USB 線長 : 約180 公分</li><li>產品尺寸: 438 (L) X 136 (W) X 40.5 (H)mm</li><li>產品保固 : Cherry軸 2年保固</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-37fab286bf.jpg"><p>鍵盤採用懸浮式設計，上蓋為底蓋，按鍵更明顯突出。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-05bf189ca8.jpg"><p>鍵盤底部相當簡潔，止滑墊分布鍵盤兩側，下半部分給的止滑墊與立腳的止滑墊同樣材質。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1e1bc8a386.jpg"><p>立腳採用的也是一般的 8° 高度。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-b9deb86aa2.jpg"><p>傳輸線加上防塵套，內容也是鍍金接頭</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-17d16567cb.jpg"><p>鍵帽採用二色成型透光度在白天開燈的情況也算是不錯。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-72c18cec4d.jpg"><p>配置的快速鍵印字還算清晰，白色鍵帽在黑色的印字相當明顯，注音字根的字樣不會過於突出搶了白色的風采，相關的快速鍵配置如下：</p><ul><li>FN+F1：開啟預設多媒體播放軟體</li><li>FN+F2：調整音量小聲</li><li>FN+F3：調整音量大聲</li><li>FN+F4：音量靜音</li><li>FN+F5：停止播放</li><li>FN+F6：上一首</li><li>FN+F7：播放/暫停</li><li>FN+F8：下一首</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-bc16903b1e.jpg"><p>鍵盤雖然是白色系銀上蓋的白光的配置，但是燈光的效果一點也不馬虎</p><ul><li>FN+F9：預設EMAIL軟體</li><li>FN+F10：開啟預設瀏覽器</li><li>FN+F11：開啟小算盤(計算機)</li><li>FN+F12：鎖定電腦( 等同 WIN+L )</li><li>FN+WIN：開關視窗鍵</li><li>FN+ESC：開關全鍵盤鎖定，鎖定狀態中 4個LED會慢閃</li><li>FN+SCRLK：開啟/關閉 側發光特效</li><li>FN+INS： 切換側邊發光特效( 共三種特效 )</li><li>FN+HOME：光跡追蹤 ( 6種效果切換)</li><li>FN+PGUP：背光恆亮及呼吸切換</li><li>FN+DEL：自訂背光模式<ul><li>自訂背光模式共可以儲存 10 組，儲存在鍵盤上方的 1~0位置</li><li>按壓FN+數字就會自動切換到該組自訂背光</li><li>FN+CTRL+DEL：按下之後會啟動背光錄製模式<br>按壓想要發光的按鍵<br>再次按壓 FN+CTRL+DEL儲存</li><li>按壓FN+DEL 會顯示最後一次背光色</li></ul></li><li>FN+END：背光特效A ( 共5組特效切換 )</li><li>FN+PGDN：背光特效B ( 共5組特效切換 )</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0334ae0208.jpg"><p>銀色上蓋的 LOGO印字為銀色，光照之下會稍微反光</p><p>燈光的特色可以參考這個影片。</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="irocks K75M - 銀色上蓋單色背光機械式鍵盤" data-litespeed-src="https://www.youtube.com/embed/xOABVreXDrQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><p>這次測試的是 K75M Cherry 紅軸，紅軸的手感就是直上直下，很少有阻力感，加上 CHERRY 提供穩定的品質，確保每個產品的手感的一致性。</p><p>懸浮式鍵盤的設計就是鍵盤的上蓋組成，降低到定位版的高度，讓鍵盤整體的造型更加簡潔，側邊採用了發光設計，讓側邊收邊的地方追加背光的特效，顯得更有特色，整體背光造型的樣式雖然是銀色上蓋，但是搭配白色組合也是相當不錯的搭配。</p><p>對這款鍵盤有興趣的朋友可以先去賣場試試手感再考慮下單。</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mechanical-keyboard">機械鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]>
    </description>
    <content:encoded><![CDATA[<div><p>IROCKS K75M 這款鍵盤推出了四年左右了，最早是先推出 <a href="https://mesak.tw/hardware/keyboard/10261/irocks-k75m">粉紅色</a>特別版，接著在推出規格小提升的 PBT<a href="https://mesak.tw/hardware/keyboard/10959/irocks-k75m-black"> 黑色版</a>，陸續也有一基本款的出現，純白色的 K75M 更能打中白色控朋友們的胃口，以及銀色上蓋接近白色的 K75M</p><p>K75M 採用 雙色成型鍵帽，德國 Cherry MX 軸體 紅軸茶軸青軸可供選擇，支援 NKRO 全鍵不衝突功能，按鍵更有多媒體快捷鍵設計，硬體巨集錄製功能，鍵盤燈色與側燈發光，上蓋採用金屬面板，懸浮式鍵盤設計。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-93ee88e6e0.jpg"><p>K75M 白色/銀色 有多種配置可選擇，軸體有 青軸 紅軸 茶軸 分別，購買的時候要特別注意是自己想要的規格再下手，白色與銀色最明顯的就是價差 白色搭配的是 PBT 鍵帽，銀色則不是。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-62ae412780.jpg"><p>鍵盤盒子的背面註明規格</p><ul><li>產品型號 : IRK75MS</li><li>產品名稱 : 背光機械鍵盤</li><li>介&nbsp; 面 : USB ( Full Speed )</li><li>按鍵數 : 104 鍵</li><li>開關形式 : Cherry / Gateron 機械開關</li><li>按鍵行程 : 4.0mm</li><li>全區防鬼鍵設計 (NKRO)</li><li>多媒體鍵 : 14 鍵</li><li>背光特效鍵 : 8 鍵</li><li>電壓 / 電流 : DC 5V / 250 mA Max.</li><li>產品重量 : 約870公克</li><li>USB 線長 : 約180 公分</li><li>產品尺寸: 438 (L) X 136 (W) X 40.5 (H)mm</li><li>產品保固 : Cherry軸 2年保固</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-37fab286bf.jpg"><p>鍵盤採用懸浮式設計，上蓋為底蓋，按鍵更明顯突出。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-05bf189ca8.jpg"><p>鍵盤底部相當簡潔，止滑墊分布鍵盤兩側，下半部分給的止滑墊與立腳的止滑墊同樣材質。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1e1bc8a386.jpg"><p>立腳採用的也是一般的 8° 高度。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-b9deb86aa2.jpg"><p>傳輸線加上防塵套，內容也是鍍金接頭</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-17d16567cb.jpg"><p>鍵帽採用二色成型透光度在白天開燈的情況也算是不錯。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-72c18cec4d.jpg"><p>配置的快速鍵印字還算清晰，白色鍵帽在黑色的印字相當明顯，注音字根的字樣不會過於突出搶了白色的風采，相關的快速鍵配置如下：</p><ul><li>FN+F1：開啟預設多媒體播放軟體</li><li>FN+F2：調整音量小聲</li><li>FN+F3：調整音量大聲</li><li>FN+F4：音量靜音</li><li>FN+F5：停止播放</li><li>FN+F6：上一首</li><li>FN+F7：播放/暫停</li><li>FN+F8：下一首</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-bc16903b1e.jpg"><p>鍵盤雖然是白色系銀上蓋的白光的配置，但是燈光的效果一點也不馬虎</p><ul><li>FN+F9：預設EMAIL軟體</li><li>FN+F10：開啟預設瀏覽器</li><li>FN+F11：開啟小算盤(計算機)</li><li>FN+F12：鎖定電腦( 等同 WIN+L )</li><li>FN+WIN：開關視窗鍵</li><li>FN+ESC：開關全鍵盤鎖定，鎖定狀態中 4個LED會慢閃</li><li>FN+SCRLK：開啟/關閉 側發光特效</li><li>FN+INS： 切換側邊發光特效( 共三種特效 )</li><li>FN+HOME：光跡追蹤 ( 6種效果切換)</li><li>FN+PGUP：背光恆亮及呼吸切換</li><li>FN+DEL：自訂背光模式<ul><li>自訂背光模式共可以儲存 10 組，儲存在鍵盤上方的 1~0位置</li><li>按壓FN+數字就會自動切換到該組自訂背光</li><li>FN+CTRL+DEL：按下之後會啟動背光錄製模式<br>按壓想要發光的按鍵<br>再次按壓 FN+CTRL+DEL儲存</li><li>按壓FN+DEL 會顯示最後一次背光色</li></ul></li><li>FN+END：背光特效A ( 共5組特效切換 )</li><li>FN+PGDN：背光特效B ( 共5組特效切換 )</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0334ae0208.jpg"><p>銀色上蓋的 LOGO印字為銀色，光照之下會稍微反光</p><p>燈光的特色可以參考這個影片。</p><div>
<iframe data-lazyloaded="1" src="about:blank" title="irocks K75M - 銀色上蓋單色背光機械式鍵盤" data-litespeed-src="https://www.youtube.com/embed/xOABVreXDrQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><p>這次測試的是 K75M Cherry 紅軸，紅軸的手感就是直上直下，很少有阻力感，加上 CHERRY 提供穩定的品質，確保每個產品的手感的一致性。</p><p>懸浮式鍵盤的設計就是鍵盤的上蓋組成，降低到定位版的高度，讓鍵盤整體的造型更加簡潔，側邊採用了發光設計，讓側邊收邊的地方追加背光的特效，顯得更有特色，整體背光造型的樣式雖然是銀色上蓋，但是搭配白色組合也是相當不錯的搭配。</p><p>對這款鍵盤有興趣的朋友可以先去賣場試試手感再考慮下單。</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mechanical-keyboard">機械鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-93ee88e6e0.jpg"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-93ee88e6e0.jpg" medium="image"/>
    <pubDate>Thu, 05 Oct 2023 01:00:00 +0000</pubDate>
  </item><item>
    <title><![CDATA[[開箱] IROCKS M31E 粉紅色光學遊戲滑鼠]]></title>
    <link>https://mesak.tw/hardware/mouse/12011/irocks-m31e-pink-gaming-mouse</link>
    <itunes:title><![CDATA[[開箱] IROCKS M31E 粉紅色光學遊戲滑鼠]]></itunes:title>
    <itunes:author><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[<div><p>喜歡粉紅色周邊產品的朋友，有一組粉色的電腦周邊就根本就是生活必需品。這次要介紹的是 IROCKS M31E 粉紅色光學遊戲滑鼠，不僅為你的桌面帶來一致性的個人化搭配，而且滑鼠本身的特點，可以讓你使用電腦體驗更加流暢。</p><p>現在就讓我們來看看 IROCKS M31E 粉紅色光學遊戲滑鼠有哪些特點吧。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-528cd2fd5a.jpg" alt="IROCKS M31E"><p>M31E 是一款有限滑鼠，產品推出了黑色與白色，手上這個粉紅色可以說是相當的漂亮</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-13936f5333.jpg" alt="IROCKS M31E"><p>M31E 內容包裝沒有太多的東西，滑鼠一隻以及說明書</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-99c6089d72.jpg" alt="IROCKS M31E"><p>底部可以看到，腳墊分布在前側兩端以及底部大面積的範圍。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-645f387cf9.jpg" alt="IROCKS M31E"><p>線材採用的是阮現設計，帶有束線帶，可以收納過長的線材，USB 送來就有一個簡單的防塵蓋</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a9bb42447c.jpg" alt="IROCKS M31E"><p>超軟的軟線設計，可以柔軟的調整放置的方線，操作滑鼠快速移動也不會卡卡。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7a561374a8.jpg" alt="IROCKS M31E"><p>M31E 的滑鼠對我來說算是屬於偏中小型的滑鼠，整底高度比較低，適合坐姿較低跟手掌較小的朋友使用。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a1e7c6bc12.jpg" alt="IROCKS M31E"><p>握持的感覺，如果手大的可能要改為抓持會比較好操控，相對於手小的朋友 M31E 倒是很服貼的握持。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-b93c30d917.jpg" alt="IROCKS M31E"><p>正面可以很清楚的看到滑鼠的設計，有點偏左凸起，右邊平緩降低，相當符合右手握持的設計</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4e43eb031c.jpg" alt="IROCKS M31E"><p>滾輪採用發光結構，中間還設計 兩個快速鍵。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-5126a1708c.jpg" alt="IROCKS M31E"><p>M31E 側邊還設計了兩個側鍵，側邊拇指停駐的地方還有格狀設計，用於止滑</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a7e2b271e8.jpg" alt="IROCKS M31E"><p>可以看到我的手可以剛好的服貼在滑鼠上，拇指可以剛好的按下 快捷鍵以及停駐在側邊區域。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-bc0ac5a239.jpg" alt="IROCKS M31E"><p>滑鼠插上電腦，在側邊與LOGO上，滾輪旁都有發光結構。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9a5c7657f1.jpg" alt="IROCKS M31E"><p>滾輪的結構更妙，除了表面是採用橡膠止滑材質之外，內側則是用透光的模式來連動 DPI 的設定，滾輪顏色可以根據 DPI設定值，切換之後馬上顯示，之後再持續跟隨光校來顯示，顯示表達相當的清晰好用。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-960553da02.jpg" alt="IROCKS M31E"><p>搭配粉紅色鍵盤真的是一整個舒適</p><p>實際拿來玩遊戲，發現 M31E 的表現相當不錯，移動可以很平穩的移動到我想要的目標，拿來打 APEX 與我常用的滑鼠沒有感到太大的差異，滑鼠可以自定義 8 階的 DPI ，範圍可以從 200 定義到 12400，我自己配置比較基本 大概 1600~2400 就足夠了，只是遊戲的時候需要把滑鼠的定義程式給關閉。</p><p>軟體方面只需要到官網下載 <a href="https://www.i-rocks.com.tw/web/service/download_list_in.jsp?cp_id=CP1692864414368">M31E</a> 應用軟體，安裝之後插上滑鼠就可以設定，滑鼠本身內建記憶體，所以設定完畢之後就不需要開啟應用軟體，可以直接拔下滑鼠，在其他電腦上應用，相當方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a31f3f4d8b.jpg"><p>軟體安裝好是英文的，可以直接在右上角切換中文</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ec7d642093.jpg"><p>滑鼠可以設定共七個按鍵自定義，功能相當豐富，左側也可以設定 Profile 設定檔，方便對應不同遊戲走不同的設定值。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6654620df3.jpg"><p>Profile  設定完畢可以按下 應用來回寫到滑鼠的記憶體中，DPI 設定可以調整到最多 8 個階層，其他像是回報率、移動速度都可以自定義調整。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-16edaa8670.jpg"><p>滑鼠發光燈光控制共有 11 種，每種都有相當獨特的光校以及獨立的調整設定，個人化配置更方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a0de58a6ef.jpg"><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mice">滑鼠</a></div></div>]]>
    </itunes:summary>
    <description>
      <![CDATA[<div><p>喜歡粉紅色周邊產品的朋友，有一組粉色的電腦周邊就根本就是生活必需品。這次要介紹的是 IROCKS M31E 粉紅色光學遊戲滑鼠，不僅為你的桌面帶來一致性的個人化搭配，而且滑鼠本身的特點，可以讓你使用電腦體驗更加流暢。</p><p>現在就讓我們來看看 IROCKS M31E 粉紅色光學遊戲滑鼠有哪些特點吧。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-528cd2fd5a.jpg" alt="IROCKS M31E"><p>M31E 是一款有限滑鼠，產品推出了黑色與白色，手上這個粉紅色可以說是相當的漂亮</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-13936f5333.jpg" alt="IROCKS M31E"><p>M31E 內容包裝沒有太多的東西，滑鼠一隻以及說明書</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-99c6089d72.jpg" alt="IROCKS M31E"><p>底部可以看到，腳墊分布在前側兩端以及底部大面積的範圍。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-645f387cf9.jpg" alt="IROCKS M31E"><p>線材採用的是阮現設計，帶有束線帶，可以收納過長的線材，USB 送來就有一個簡單的防塵蓋</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a9bb42447c.jpg" alt="IROCKS M31E"><p>超軟的軟線設計，可以柔軟的調整放置的方線，操作滑鼠快速移動也不會卡卡。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7a561374a8.jpg" alt="IROCKS M31E"><p>M31E 的滑鼠對我來說算是屬於偏中小型的滑鼠，整底高度比較低，適合坐姿較低跟手掌較小的朋友使用。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a1e7c6bc12.jpg" alt="IROCKS M31E"><p>握持的感覺，如果手大的可能要改為抓持會比較好操控，相對於手小的朋友 M31E 倒是很服貼的握持。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-b93c30d917.jpg" alt="IROCKS M31E"><p>正面可以很清楚的看到滑鼠的設計，有點偏左凸起，右邊平緩降低，相當符合右手握持的設計</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4e43eb031c.jpg" alt="IROCKS M31E"><p>滾輪採用發光結構，中間還設計 兩個快速鍵。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-5126a1708c.jpg" alt="IROCKS M31E"><p>M31E 側邊還設計了兩個側鍵，側邊拇指停駐的地方還有格狀設計，用於止滑</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a7e2b271e8.jpg" alt="IROCKS M31E"><p>可以看到我的手可以剛好的服貼在滑鼠上，拇指可以剛好的按下 快捷鍵以及停駐在側邊區域。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-bc0ac5a239.jpg" alt="IROCKS M31E"><p>滑鼠插上電腦，在側邊與LOGO上，滾輪旁都有發光結構。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9a5c7657f1.jpg" alt="IROCKS M31E"><p>滾輪的結構更妙，除了表面是採用橡膠止滑材質之外，內側則是用透光的模式來連動 DPI 的設定，滾輪顏色可以根據 DPI設定值，切換之後馬上顯示，之後再持續跟隨光校來顯示，顯示表達相當的清晰好用。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-960553da02.jpg" alt="IROCKS M31E"><p>搭配粉紅色鍵盤真的是一整個舒適</p><p>實際拿來玩遊戲，發現 M31E 的表現相當不錯，移動可以很平穩的移動到我想要的目標，拿來打 APEX 與我常用的滑鼠沒有感到太大的差異，滑鼠可以自定義 8 階的 DPI ，範圍可以從 200 定義到 12400，我自己配置比較基本 大概 1600~2400 就足夠了，只是遊戲的時候需要把滑鼠的定義程式給關閉。</p><p>軟體方面只需要到官網下載 <a href="https://www.i-rocks.com.tw/web/service/download_list_in.jsp?cp_id=CP1692864414368">M31E</a> 應用軟體，安裝之後插上滑鼠就可以設定，滑鼠本身內建記憶體，所以設定完畢之後就不需要開啟應用軟體，可以直接拔下滑鼠，在其他電腦上應用，相當方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a31f3f4d8b.jpg"><p>軟體安裝好是英文的，可以直接在右上角切換中文</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ec7d642093.jpg"><p>滑鼠可以設定共七個按鍵自定義，功能相當豐富，左側也可以設定 Profile 設定檔，方便對應不同遊戲走不同的設定值。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6654620df3.jpg"><p>Profile  設定完畢可以按下 應用來回寫到滑鼠的記憶體中，DPI 設定可以調整到最多 8 個階層，其他像是回報率、移動速度都可以自定義調整。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-16edaa8670.jpg"><p>滑鼠發光燈光控制共有 11 種，每種都有相當獨特的光校以及獨立的調整設定，個人化配置更方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a0de58a6ef.jpg"><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mice">滑鼠</a></div></div>]]>
    </description>
    <content:encoded><![CDATA[<div><p>喜歡粉紅色周邊產品的朋友，有一組粉色的電腦周邊就根本就是生活必需品。這次要介紹的是 IROCKS M31E 粉紅色光學遊戲滑鼠，不僅為你的桌面帶來一致性的個人化搭配，而且滑鼠本身的特點，可以讓你使用電腦體驗更加流暢。</p><p>現在就讓我們來看看 IROCKS M31E 粉紅色光學遊戲滑鼠有哪些特點吧。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-528cd2fd5a.jpg" alt="IROCKS M31E"><p>M31E 是一款有限滑鼠，產品推出了黑色與白色，手上這個粉紅色可以說是相當的漂亮</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-13936f5333.jpg" alt="IROCKS M31E"><p>M31E 內容包裝沒有太多的東西，滑鼠一隻以及說明書</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-99c6089d72.jpg" alt="IROCKS M31E"><p>底部可以看到，腳墊分布在前側兩端以及底部大面積的範圍。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-645f387cf9.jpg" alt="IROCKS M31E"><p>線材採用的是阮現設計，帶有束線帶，可以收納過長的線材，USB 送來就有一個簡單的防塵蓋</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a9bb42447c.jpg" alt="IROCKS M31E"><p>超軟的軟線設計，可以柔軟的調整放置的方線，操作滑鼠快速移動也不會卡卡。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7a561374a8.jpg" alt="IROCKS M31E"><p>M31E 的滑鼠對我來說算是屬於偏中小型的滑鼠，整底高度比較低，適合坐姿較低跟手掌較小的朋友使用。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a1e7c6bc12.jpg" alt="IROCKS M31E"><p>握持的感覺，如果手大的可能要改為抓持會比較好操控，相對於手小的朋友 M31E 倒是很服貼的握持。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-b93c30d917.jpg" alt="IROCKS M31E"><p>正面可以很清楚的看到滑鼠的設計，有點偏左凸起，右邊平緩降低，相當符合右手握持的設計</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4e43eb031c.jpg" alt="IROCKS M31E"><p>滾輪採用發光結構，中間還設計 兩個快速鍵。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-5126a1708c.jpg" alt="IROCKS M31E"><p>M31E 側邊還設計了兩個側鍵，側邊拇指停駐的地方還有格狀設計，用於止滑</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a7e2b271e8.jpg" alt="IROCKS M31E"><p>可以看到我的手可以剛好的服貼在滑鼠上，拇指可以剛好的按下 快捷鍵以及停駐在側邊區域。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-bc0ac5a239.jpg" alt="IROCKS M31E"><p>滑鼠插上電腦，在側邊與LOGO上，滾輪旁都有發光結構。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9a5c7657f1.jpg" alt="IROCKS M31E"><p>滾輪的結構更妙，除了表面是採用橡膠止滑材質之外，內側則是用透光的模式來連動 DPI 的設定，滾輪顏色可以根據 DPI設定值，切換之後馬上顯示，之後再持續跟隨光校來顯示，顯示表達相當的清晰好用。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-960553da02.jpg" alt="IROCKS M31E"><p>搭配粉紅色鍵盤真的是一整個舒適</p><p>實際拿來玩遊戲，發現 M31E 的表現相當不錯，移動可以很平穩的移動到我想要的目標，拿來打 APEX 與我常用的滑鼠沒有感到太大的差異，滑鼠可以自定義 8 階的 DPI ，範圍可以從 200 定義到 12400，我自己配置比較基本 大概 1600~2400 就足夠了，只是遊戲的時候需要把滑鼠的定義程式給關閉。</p><p>軟體方面只需要到官網下載 <a href="https://www.i-rocks.com.tw/web/service/download_list_in.jsp?cp_id=CP1692864414368">M31E</a> 應用軟體，安裝之後插上滑鼠就可以設定，滑鼠本身內建記憶體，所以設定完畢之後就不需要開啟應用軟體，可以直接拔下滑鼠，在其他電腦上應用，相當方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a31f3f4d8b.jpg"><p>軟體安裝好是英文的，可以直接在右上角切換中文</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ec7d642093.jpg"><p>滑鼠可以設定共七個按鍵自定義，功能相當豐富，左側也可以設定 Profile 設定檔，方便對應不同遊戲走不同的設定值。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6654620df3.jpg"><p>Profile  設定完畢可以按下 應用來回寫到滑鼠的記憶體中，DPI 設定可以調整到最多 8 個階層，其他像是回報率、移動速度都可以自定義調整。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-16edaa8670.jpg"><p>滑鼠發光燈光控制共有 11 種，每種都有相當獨特的光校以及獨立的調整設定，個人化配置更方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-a0de58a6ef.jpg"><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/mice">滑鼠</a></div></div>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-528cd2fd5a.jpg"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-528cd2fd5a.jpg" medium="image"/>
    <pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate>
  </item><item>
    <title><![CDATA[[開箱] 筆電用的支架，頑皮鬼Life隱形筆電架，貼上去就可以用]]></title>
    <link>https://mesak.tw/hardware/peripherals/11971/naughtyghost-stealth-laptop-stand</link>
    <itunes:title><![CDATA[[開箱] 筆電用的支架，頑皮鬼Life隱形筆電架，貼上去就可以用]]></itunes:title>
    <itunes:author><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[<div><p>最近開發寫程式的工作越來越繁重了，外出使用筆電的機會越來越高了，平常在外面使用筆電的時候都採用平放的方式使用電腦，打起字來都有點卡卡的。</p><p>想找個電腦用的支撐架，結果搜尋找到了一款  <a href="https://lihi2.com/YAQ2Z">Life&nbsp;生活【隱形筆電支架】</a>，可以直接貼在筆電後方，利用摺紙的設計，可以提供三種角度來操作電腦，相當適合我現在外出使用電腦的工作狀況。事不宜遲現在就來開箱吧。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2918d243a1.jpg" alt="隱形筆電支架"><p>東西超快就到貨了，外箱還有一個頑皮鬼的圖案。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-78f6c58ccb.jpg" alt="隱形筆電支架"><p>開箱，內容物是一個超薄的袋裝包裝。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-920c1340c4.png" alt="隱形筆電支架"><p>官網上一共有六種顏色，這次選購的是牛仔藍的顏色，還可以使用超商付款取貨，超方便的。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4cf02cbe14.jpg"><p>內容物有一張說明書，隱形筆電支架，另外副了兩個止滑墊，在筆電支架撐起的時候，靠近手貼底部的地方就需要黏上止滑。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-78ecc5b0d9.jpg" alt="隱形筆電支架"><p>支架表面有一點壓字的LOGO，對騎你的筆電轉軸處，撕下貼模黏上即可，黏好之後最好稍微用手壓合一下，靜置個五分鐘再開始用</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-bd0c5dcbe0.jpg" alt="隱形筆電支架"><p>貼好之後幾乎完全感覺不到它的存在</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1eefd4841d.jpg" alt="隱形筆電支架"><p>首先採用 20度的角度來操作，這個角度筆電大約會被抬起 4.5 公分左右，角度大約在 20度左右</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-be4172b1f4.jpg" alt="隱形筆電支架"><p>這個角度滿適合拿來輸入文字，偶爾外出要打字的時候，無法調整到良好的位置算是硬傷，雖然不會長期都在外使用筆電，但是找到一個良好的舒適角度是我們文字輸入工作者的必備條件。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2000784afa.jpg" alt="隱形筆電支架"><p>再來是增高近 5.5 公分，可以讓筆電抬高角度近 25 度的高度，這個角度用來使用視訊鏡頭開會的時候，這個角度不錯，基本上照到畫面大概都在半身左右，平放在桌上的話，很大部分會照到大頭比較多。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7157babaef.jpg" alt="隱形筆電支架"><p>這個角度適合視訊會議，或是瀏覽網頁</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0eaa6a4f4d.jpg" alt="隱形筆電支架"><p>接著就是最高的角度，30度。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2252a9cf40.jpg" alt="隱形筆電支架"><p>這個角度將筆電的螢幕拉到最高，角度已經不太適合用來打字，通常都可以用來看看影片居多，在這個角度可以舒適的坐在位子上，打開影片來觀賞。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-cad377a9cf.jpg" alt="隱形筆電支架"><p>30 度的角度，除了看影片之外對我來說還有另一個用途。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f4ed40e490.jpg" alt="隱形筆電支架"><p>就是用來打 SWITCH，之前買了一組 NEXDOCK，純螢幕帶電池輸出的擴充組，造型跟筆電沒有太大差異，配合 無痕黏貼 的功能特點，直接拆下來就可以貼在 NEXDOCK上， NEXDOCK 可以直接接入 NINTENDO SWITCH 放大螢幕，不需要額外接電源，這個角度對我來說，偶爾需要打一下遊戲就相當的方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-33204e8b15.jpg" alt="隱形筆電支架"><p>相較之下，在桌子上遊戲，平放螢幕在視角上就有點低。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1a0f748693.jpg" alt="隱形筆電支架"><p>隱形筆電支架超輕巧的造型設計，讓你收納在筆電包、背包之中都感覺不到它的存在。</p><p>頑皮鬼這款 隱形筆電支架，重量相當輕薄，直接黏貼在筆電上帶著走也不會感到負擔</p><p>採用 PRIME FLAX&nbsp;防刮亞麻皮革，不怕在桌面上或是在包包中受到刮傷。</p><p>摺紙設計採用力學結構支撐，不易搖晃傾倒，整體而言算是一個相當輕巧有用的小幫手</p><p>如果使用筆電有需要的朋友們可以上官網上購買：<a href="https://lihi2.com/YAQ2Z">Life&nbsp;生活【隱形筆電支架】</a></p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/switch">switch</a><a href="https://mesak.tw/tag/%e7%ab%8b%e6%9e%b6">立架</a><a href="https://mesak.tw/tag/%e7%ad%86%e8%a8%98%e5%9e%8b%e9%9b%bb%e8%85%a6">筆記型電腦</a></div></div>]]>
    </itunes:summary>
    <description>
      <![CDATA[<div><p>最近開發寫程式的工作越來越繁重了，外出使用筆電的機會越來越高了，平常在外面使用筆電的時候都採用平放的方式使用電腦，打起字來都有點卡卡的。</p><p>想找個電腦用的支撐架，結果搜尋找到了一款  <a href="https://lihi2.com/YAQ2Z">Life&nbsp;生活【隱形筆電支架】</a>，可以直接貼在筆電後方，利用摺紙的設計，可以提供三種角度來操作電腦，相當適合我現在外出使用電腦的工作狀況。事不宜遲現在就來開箱吧。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2918d243a1.jpg" alt="隱形筆電支架"><p>東西超快就到貨了，外箱還有一個頑皮鬼的圖案。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-78f6c58ccb.jpg" alt="隱形筆電支架"><p>開箱，內容物是一個超薄的袋裝包裝。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-920c1340c4.png" alt="隱形筆電支架"><p>官網上一共有六種顏色，這次選購的是牛仔藍的顏色，還可以使用超商付款取貨，超方便的。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4cf02cbe14.jpg"><p>內容物有一張說明書，隱形筆電支架，另外副了兩個止滑墊，在筆電支架撐起的時候，靠近手貼底部的地方就需要黏上止滑。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-78ecc5b0d9.jpg" alt="隱形筆電支架"><p>支架表面有一點壓字的LOGO，對騎你的筆電轉軸處，撕下貼模黏上即可，黏好之後最好稍微用手壓合一下，靜置個五分鐘再開始用</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-bd0c5dcbe0.jpg" alt="隱形筆電支架"><p>貼好之後幾乎完全感覺不到它的存在</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1eefd4841d.jpg" alt="隱形筆電支架"><p>首先採用 20度的角度來操作，這個角度筆電大約會被抬起 4.5 公分左右，角度大約在 20度左右</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-be4172b1f4.jpg" alt="隱形筆電支架"><p>這個角度滿適合拿來輸入文字，偶爾外出要打字的時候，無法調整到良好的位置算是硬傷，雖然不會長期都在外使用筆電，但是找到一個良好的舒適角度是我們文字輸入工作者的必備條件。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2000784afa.jpg" alt="隱形筆電支架"><p>再來是增高近 5.5 公分，可以讓筆電抬高角度近 25 度的高度，這個角度用來使用視訊鏡頭開會的時候，這個角度不錯，基本上照到畫面大概都在半身左右，平放在桌上的話，很大部分會照到大頭比較多。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7157babaef.jpg" alt="隱形筆電支架"><p>這個角度適合視訊會議，或是瀏覽網頁</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0eaa6a4f4d.jpg" alt="隱形筆電支架"><p>接著就是最高的角度，30度。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2252a9cf40.jpg" alt="隱形筆電支架"><p>這個角度將筆電的螢幕拉到最高，角度已經不太適合用來打字，通常都可以用來看看影片居多，在這個角度可以舒適的坐在位子上，打開影片來觀賞。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-cad377a9cf.jpg" alt="隱形筆電支架"><p>30 度的角度，除了看影片之外對我來說還有另一個用途。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f4ed40e490.jpg" alt="隱形筆電支架"><p>就是用來打 SWITCH，之前買了一組 NEXDOCK，純螢幕帶電池輸出的擴充組，造型跟筆電沒有太大差異，配合 無痕黏貼 的功能特點，直接拆下來就可以貼在 NEXDOCK上， NEXDOCK 可以直接接入 NINTENDO SWITCH 放大螢幕，不需要額外接電源，這個角度對我來說，偶爾需要打一下遊戲就相當的方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-33204e8b15.jpg" alt="隱形筆電支架"><p>相較之下，在桌子上遊戲，平放螢幕在視角上就有點低。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1a0f748693.jpg" alt="隱形筆電支架"><p>隱形筆電支架超輕巧的造型設計，讓你收納在筆電包、背包之中都感覺不到它的存在。</p><p>頑皮鬼這款 隱形筆電支架，重量相當輕薄，直接黏貼在筆電上帶著走也不會感到負擔</p><p>採用 PRIME FLAX&nbsp;防刮亞麻皮革，不怕在桌面上或是在包包中受到刮傷。</p><p>摺紙設計採用力學結構支撐，不易搖晃傾倒，整體而言算是一個相當輕巧有用的小幫手</p><p>如果使用筆電有需要的朋友們可以上官網上購買：<a href="https://lihi2.com/YAQ2Z">Life&nbsp;生活【隱形筆電支架】</a></p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/switch">switch</a><a href="https://mesak.tw/tag/%e7%ab%8b%e6%9e%b6">立架</a><a href="https://mesak.tw/tag/%e7%ad%86%e8%a8%98%e5%9e%8b%e9%9b%bb%e8%85%a6">筆記型電腦</a></div></div>]]>
    </description>
    <content:encoded><![CDATA[<div><p>最近開發寫程式的工作越來越繁重了，外出使用筆電的機會越來越高了，平常在外面使用筆電的時候都採用平放的方式使用電腦，打起字來都有點卡卡的。</p><p>想找個電腦用的支撐架，結果搜尋找到了一款  <a href="https://lihi2.com/YAQ2Z">Life&nbsp;生活【隱形筆電支架】</a>，可以直接貼在筆電後方，利用摺紙的設計，可以提供三種角度來操作電腦，相當適合我現在外出使用電腦的工作狀況。事不宜遲現在就來開箱吧。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2918d243a1.jpg" alt="隱形筆電支架"><p>東西超快就到貨了，外箱還有一個頑皮鬼的圖案。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-78f6c58ccb.jpg" alt="隱形筆電支架"><p>開箱，內容物是一個超薄的袋裝包裝。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-920c1340c4.png" alt="隱形筆電支架"><p>官網上一共有六種顏色，這次選購的是牛仔藍的顏色，還可以使用超商付款取貨，超方便的。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-4cf02cbe14.jpg"><p>內容物有一張說明書，隱形筆電支架，另外副了兩個止滑墊，在筆電支架撐起的時候，靠近手貼底部的地方就需要黏上止滑。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-78ecc5b0d9.jpg" alt="隱形筆電支架"><p>支架表面有一點壓字的LOGO，對騎你的筆電轉軸處，撕下貼模黏上即可，黏好之後最好稍微用手壓合一下，靜置個五分鐘再開始用</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-bd0c5dcbe0.jpg" alt="隱形筆電支架"><p>貼好之後幾乎完全感覺不到它的存在</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1eefd4841d.jpg" alt="隱形筆電支架"><p>首先採用 20度的角度來操作，這個角度筆電大約會被抬起 4.5 公分左右，角度大約在 20度左右</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-be4172b1f4.jpg" alt="隱形筆電支架"><p>這個角度滿適合拿來輸入文字，偶爾外出要打字的時候，無法調整到良好的位置算是硬傷，雖然不會長期都在外使用筆電，但是找到一個良好的舒適角度是我們文字輸入工作者的必備條件。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2000784afa.jpg" alt="隱形筆電支架"><p>再來是增高近 5.5 公分，可以讓筆電抬高角度近 25 度的高度，這個角度用來使用視訊鏡頭開會的時候，這個角度不錯，基本上照到畫面大概都在半身左右，平放在桌上的話，很大部分會照到大頭比較多。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7157babaef.jpg" alt="隱形筆電支架"><p>這個角度適合視訊會議，或是瀏覽網頁</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0eaa6a4f4d.jpg" alt="隱形筆電支架"><p>接著就是最高的角度，30度。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2252a9cf40.jpg" alt="隱形筆電支架"><p>這個角度將筆電的螢幕拉到最高，角度已經不太適合用來打字，通常都可以用來看看影片居多，在這個角度可以舒適的坐在位子上，打開影片來觀賞。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-cad377a9cf.jpg" alt="隱形筆電支架"><p>30 度的角度，除了看影片之外對我來說還有另一個用途。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f4ed40e490.jpg" alt="隱形筆電支架"><p>就是用來打 SWITCH，之前買了一組 NEXDOCK，純螢幕帶電池輸出的擴充組，造型跟筆電沒有太大差異，配合 無痕黏貼 的功能特點，直接拆下來就可以貼在 NEXDOCK上， NEXDOCK 可以直接接入 NINTENDO SWITCH 放大螢幕，不需要額外接電源，這個角度對我來說，偶爾需要打一下遊戲就相當的方便。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-33204e8b15.jpg" alt="隱形筆電支架"><p>相較之下，在桌子上遊戲，平放螢幕在視角上就有點低。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1a0f748693.jpg" alt="隱形筆電支架"><p>隱形筆電支架超輕巧的造型設計，讓你收納在筆電包、背包之中都感覺不到它的存在。</p><p>頑皮鬼這款 隱形筆電支架，重量相當輕薄，直接黏貼在筆電上帶著走也不會感到負擔</p><p>採用 PRIME FLAX&nbsp;防刮亞麻皮革，不怕在桌面上或是在包包中受到刮傷。</p><p>摺紙設計採用力學結構支撐，不易搖晃傾倒，整體而言算是一個相當輕巧有用的小幫手</p><p>如果使用筆電有需要的朋友們可以上官網上購買：<a href="https://lihi2.com/YAQ2Z">Life&nbsp;生活【隱形筆電支架】</a></p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/switch">switch</a><a href="https://mesak.tw/tag/%e7%ab%8b%e6%9e%b6">立架</a><a href="https://mesak.tw/tag/%e7%ad%86%e8%a8%98%e5%9e%8b%e9%9b%bb%e8%85%a6">筆記型電腦</a></div></div>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2918d243a1.jpg"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2918d243a1.jpg" medium="image"/>
    <pubDate>Tue, 12 Sep 2023 23:00:00 +0000</pubDate>
  </item><item>
    <title><![CDATA[[開箱] IROCKS K50W Plus 20周年紀念版]]></title>
    <link>https://mesak.tw/hardware/keyboard/11953/irocks-20th-k50w-plus</link>
    <itunes:title><![CDATA[[開箱] IROCKS K50W Plus 20周年紀念版]]></itunes:title>
    <itunes:author><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[<div><p>說到鍵盤不得不想到，以薄膜鍵盤出身的 IROCKS 鍵盤，近年來的機械式鍵盤越來越盛行，許多周邊廠商都只推出機械式鍵盤，還能推出薄膜鍵盤的廠商少之又少，IROCKS 出現幾款相當經典的薄膜鍵盤，其中包括 <a href="https://mesak.tw/hardware/keyboard/863/i-rocks-k10">K10 </a><a href="https://mesak.tw/hardware/keyboard/5066/i-rocks-kr6260e-light-on">、KR6260</a> 、<a href="https://mesak.tw/hardware/keyboard/5231/i-rocks-k50e">K50E </a>，其中 K10 KR6260 都是使用 POM 軸體來設計的，K50E 則是採用剪刀腳設計，這幾把薄膜鍵盤的輸入手感都相當的出色。</p><p>IROCKS 如今迎來 20周年慶祝，又重新將 K50E 改版，推出了 K50W Plus ，整體來說，拿掉了舊有的變速模式，增加了應用軟體的應用以及全新的外觀配色設計。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6a16f148f3.jpg"><p>IROCKS K50W Plus 光從外盒外觀就可以看到 20周年紀念的字樣，還記得 <a href="https://mesak.tw/hardware/keyboard/8681/i-rocks-k67m">15周年</a>的時候，鍵盤盒子採用的也是最簡約的造型設計，20周年的設計也是簡單的採用黑底的設計，底部再帶出鍵盤框體的線條，相當的簡約不花俏。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1fb0c96b0f.jpg"><p>背面的設計詳述了鍵盤的特色點以及大大的 20th。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-57da2da8e2.jpg"><p>鍵盤取出，黑色橘色強烈對比的色調相當搶眼</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9034f8521a.jpg"><p>鍵盤整體的配置採用 大L ENTER 配置，採用相當顏色分明的配色設計，黑色底，橘色功能鍵區域，四個長鍵採用 深灰藍配色</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7d1171c27c.jpg"><p>背板可以看到三邊出線，維持舊有的可隨個人狀況調整的三個線槽出線</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f34d5601fe.jpg"><p>鍵盤採用 USB 連接方式，帶有消磁環以及魔鬼氈，要注意魔鬼氈是套上的，沒有黏好容易脫離。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-672b4b32a9.jpg"><p>鍵盤依然採用 增加 8° 的立腳，底部有增加止滑墊止滑。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3e4cbf5213.jpg"><p>產品銘版，產品限量 999 支，這把應該是 917 號</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1dfc71de5b.jpg"><p>K50W 鍵盤的中間有穿孔，這個早期是避免飲料潑灑到鍵盤，液體滲入電路板做的最基礎保護，看來是完全沿用舊版的模組復刻了這把鍵盤</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2930c39ba2.jpg"><p>不過鍵盤還是作出了些許的差異，原有的透光鍵帽因為改為非透光的鍵盤，所以鍵帽全部都改為不透光鍵帽，手感上對我來說透光鍵帽有種特殊的平滑感，K50W Plus 在打感上多了阻滑感，有點類似 PBT 的不平滑表面，打起來更有手感。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-130efdc661.jpg"><p>鍵盤右側 ALT ，也從原本的 WIN改為 FN，增加了更多功能鍵的設計，鍵盤六塊肌上方三鍵改為音量控制，配合 FN 的組合為</p><ul><li>Fn + Insert ：音量靜音</li><li>Fn + Home：音量減</li><li>Fn + PgUp：音量加</li></ul><p>F9~12 也多了 Fn 組合多媒體鍵：</p><ul><li>Fn+ F9：播放 / 暫停</li><li>Fn+ F10：上一首</li><li>Fn+ F11：停止</li><li>Fn+ F12：下一首</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-aa86c4799b.jpg"><p>另外原本右側上方原先為音量控制也改為巨集鍵控制，原本經典的變速也因為時代的轉變 PS/2 介面的消失，改為比較純樸的 Fn+ ESC 鎖定鍵盤指示燈，當燈號亮起就會鎖定整把鍵盤按鍵輸入，避免誤觸。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0ca58bff49.jpg"><p>K50M Plus 的經典造型，加上相當有特色的黑橘色配色設計，在電腦桌上使用實在是相當的搶眼，高腳位表現出來的輸入手感，真的一點都不輸給機械式鍵盤，如果你習慣輸入茶軸，需要一點回彈的手感，高腳位的剪刀腳可以帶給你十足的回彈阻力感，快觸底的時候會透過薄膜鍵盤的橡膠導套給予特殊的卡頓Q彈手感，剪刀腳提供相當穩定的鍵帽穩定度，不會歪斜的輸入手感真的是機械式鍵盤難以輕易達成的手感效果。</p><p><a href="https://www.i-rocks.com.tw/web/service/download.jsp?lang=tw">IROCKS 官網</a>還提供了應用軟體可以下載，可以讓你編輯鍵盤上 P1~P4 的巨集</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-481fc417bf.jpg"><p>應用軟體啟動後可以看到鍵盤的 LAYOUT，匯出匯入設定，P1~P4 的巨集設定</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-e2b3b6dc91.jpg"><p>巨集管理可以讓你錄製所需錄製的俺鍵順序，或是簡單的使用組合鍵紀錄，執行應用程式、多媒體設置等選項</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3c2e3af809.jpg"><p>巨集錄製可以調整你鍵盤鍵入的順序，可調整紀錄設計延遲等功能</p><p>K50W Plus 高腳位薄膜鍵盤，這把紀念款鍵盤，不單單只是紀念廠商成立周年的產品，經典造型的輸入裝置才是讓人愛不釋手的主因，機械式鍵盤最早以前也只是單純的輸入工具，這幾年才有相當不一樣的發展。薄膜式鍵盤的出現不單單只是讓可攜式電腦可以減少尺寸，薄膜加上剪刀腳的設計，也讓平價鍵盤有了相當優秀的輸入手感，一點都不輸機械式鍵盤，每一個按鍵的手感都有相當一致性的表現。</p><p>想要收藏這把鍵盤的朋友，要快緊腳步收藏了，手腳慢了就沒了</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/membrane-keyboard">薄膜鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]>
    </itunes:summary>
    <description>
      <![CDATA[<div><p>說到鍵盤不得不想到，以薄膜鍵盤出身的 IROCKS 鍵盤，近年來的機械式鍵盤越來越盛行，許多周邊廠商都只推出機械式鍵盤，還能推出薄膜鍵盤的廠商少之又少，IROCKS 出現幾款相當經典的薄膜鍵盤，其中包括 <a href="https://mesak.tw/hardware/keyboard/863/i-rocks-k10">K10 </a><a href="https://mesak.tw/hardware/keyboard/5066/i-rocks-kr6260e-light-on">、KR6260</a> 、<a href="https://mesak.tw/hardware/keyboard/5231/i-rocks-k50e">K50E </a>，其中 K10 KR6260 都是使用 POM 軸體來設計的，K50E 則是採用剪刀腳設計，這幾把薄膜鍵盤的輸入手感都相當的出色。</p><p>IROCKS 如今迎來 20周年慶祝，又重新將 K50E 改版，推出了 K50W Plus ，整體來說，拿掉了舊有的變速模式，增加了應用軟體的應用以及全新的外觀配色設計。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6a16f148f3.jpg"><p>IROCKS K50W Plus 光從外盒外觀就可以看到 20周年紀念的字樣，還記得 <a href="https://mesak.tw/hardware/keyboard/8681/i-rocks-k67m">15周年</a>的時候，鍵盤盒子採用的也是最簡約的造型設計，20周年的設計也是簡單的採用黑底的設計，底部再帶出鍵盤框體的線條，相當的簡約不花俏。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1fb0c96b0f.jpg"><p>背面的設計詳述了鍵盤的特色點以及大大的 20th。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-57da2da8e2.jpg"><p>鍵盤取出，黑色橘色強烈對比的色調相當搶眼</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9034f8521a.jpg"><p>鍵盤整體的配置採用 大L ENTER 配置，採用相當顏色分明的配色設計，黑色底，橘色功能鍵區域，四個長鍵採用 深灰藍配色</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7d1171c27c.jpg"><p>背板可以看到三邊出線，維持舊有的可隨個人狀況調整的三個線槽出線</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f34d5601fe.jpg"><p>鍵盤採用 USB 連接方式，帶有消磁環以及魔鬼氈，要注意魔鬼氈是套上的，沒有黏好容易脫離。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-672b4b32a9.jpg"><p>鍵盤依然採用 增加 8° 的立腳，底部有增加止滑墊止滑。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3e4cbf5213.jpg"><p>產品銘版，產品限量 999 支，這把應該是 917 號</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1dfc71de5b.jpg"><p>K50W 鍵盤的中間有穿孔，這個早期是避免飲料潑灑到鍵盤，液體滲入電路板做的最基礎保護，看來是完全沿用舊版的模組復刻了這把鍵盤</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2930c39ba2.jpg"><p>不過鍵盤還是作出了些許的差異，原有的透光鍵帽因為改為非透光的鍵盤，所以鍵帽全部都改為不透光鍵帽，手感上對我來說透光鍵帽有種特殊的平滑感，K50W Plus 在打感上多了阻滑感，有點類似 PBT 的不平滑表面，打起來更有手感。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-130efdc661.jpg"><p>鍵盤右側 ALT ，也從原本的 WIN改為 FN，增加了更多功能鍵的設計，鍵盤六塊肌上方三鍵改為音量控制，配合 FN 的組合為</p><ul><li>Fn + Insert ：音量靜音</li><li>Fn + Home：音量減</li><li>Fn + PgUp：音量加</li></ul><p>F9~12 也多了 Fn 組合多媒體鍵：</p><ul><li>Fn+ F9：播放 / 暫停</li><li>Fn+ F10：上一首</li><li>Fn+ F11：停止</li><li>Fn+ F12：下一首</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-aa86c4799b.jpg"><p>另外原本右側上方原先為音量控制也改為巨集鍵控制，原本經典的變速也因為時代的轉變 PS/2 介面的消失，改為比較純樸的 Fn+ ESC 鎖定鍵盤指示燈，當燈號亮起就會鎖定整把鍵盤按鍵輸入，避免誤觸。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0ca58bff49.jpg"><p>K50M Plus 的經典造型，加上相當有特色的黑橘色配色設計，在電腦桌上使用實在是相當的搶眼，高腳位表現出來的輸入手感，真的一點都不輸給機械式鍵盤，如果你習慣輸入茶軸，需要一點回彈的手感，高腳位的剪刀腳可以帶給你十足的回彈阻力感，快觸底的時候會透過薄膜鍵盤的橡膠導套給予特殊的卡頓Q彈手感，剪刀腳提供相當穩定的鍵帽穩定度，不會歪斜的輸入手感真的是機械式鍵盤難以輕易達成的手感效果。</p><p><a href="https://www.i-rocks.com.tw/web/service/download.jsp?lang=tw">IROCKS 官網</a>還提供了應用軟體可以下載，可以讓你編輯鍵盤上 P1~P4 的巨集</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-481fc417bf.jpg"><p>應用軟體啟動後可以看到鍵盤的 LAYOUT，匯出匯入設定，P1~P4 的巨集設定</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-e2b3b6dc91.jpg"><p>巨集管理可以讓你錄製所需錄製的俺鍵順序，或是簡單的使用組合鍵紀錄，執行應用程式、多媒體設置等選項</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3c2e3af809.jpg"><p>巨集錄製可以調整你鍵盤鍵入的順序，可調整紀錄設計延遲等功能</p><p>K50W Plus 高腳位薄膜鍵盤，這把紀念款鍵盤，不單單只是紀念廠商成立周年的產品，經典造型的輸入裝置才是讓人愛不釋手的主因，機械式鍵盤最早以前也只是單純的輸入工具，這幾年才有相當不一樣的發展。薄膜式鍵盤的出現不單單只是讓可攜式電腦可以減少尺寸，薄膜加上剪刀腳的設計，也讓平價鍵盤有了相當優秀的輸入手感，一點都不輸機械式鍵盤，每一個按鍵的手感都有相當一致性的表現。</p><p>想要收藏這把鍵盤的朋友，要快緊腳步收藏了，手腳慢了就沒了</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/membrane-keyboard">薄膜鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]>
    </description>
    <content:encoded><![CDATA[<div><p>說到鍵盤不得不想到，以薄膜鍵盤出身的 IROCKS 鍵盤，近年來的機械式鍵盤越來越盛行，許多周邊廠商都只推出機械式鍵盤，還能推出薄膜鍵盤的廠商少之又少，IROCKS 出現幾款相當經典的薄膜鍵盤，其中包括 <a href="https://mesak.tw/hardware/keyboard/863/i-rocks-k10">K10 </a><a href="https://mesak.tw/hardware/keyboard/5066/i-rocks-kr6260e-light-on">、KR6260</a> 、<a href="https://mesak.tw/hardware/keyboard/5231/i-rocks-k50e">K50E </a>，其中 K10 KR6260 都是使用 POM 軸體來設計的，K50E 則是採用剪刀腳設計，這幾把薄膜鍵盤的輸入手感都相當的出色。</p><p>IROCKS 如今迎來 20周年慶祝，又重新將 K50E 改版，推出了 K50W Plus ，整體來說，拿掉了舊有的變速模式，增加了應用軟體的應用以及全新的外觀配色設計。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6a16f148f3.jpg"><p>IROCKS K50W Plus 光從外盒外觀就可以看到 20周年紀念的字樣，還記得 <a href="https://mesak.tw/hardware/keyboard/8681/i-rocks-k67m">15周年</a>的時候，鍵盤盒子採用的也是最簡約的造型設計，20周年的設計也是簡單的採用黑底的設計，底部再帶出鍵盤框體的線條，相當的簡約不花俏。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1fb0c96b0f.jpg"><p>背面的設計詳述了鍵盤的特色點以及大大的 20th。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-57da2da8e2.jpg"><p>鍵盤取出，黑色橘色強烈對比的色調相當搶眼</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-9034f8521a.jpg"><p>鍵盤整體的配置採用 大L ENTER 配置，採用相當顏色分明的配色設計，黑色底，橘色功能鍵區域，四個長鍵採用 深灰藍配色</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-7d1171c27c.jpg"><p>背板可以看到三邊出線，維持舊有的可隨個人狀況調整的三個線槽出線</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f34d5601fe.jpg"><p>鍵盤採用 USB 連接方式，帶有消磁環以及魔鬼氈，要注意魔鬼氈是套上的，沒有黏好容易脫離。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-672b4b32a9.jpg"><p>鍵盤依然採用 增加 8° 的立腳，底部有增加止滑墊止滑。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3e4cbf5213.jpg"><p>產品銘版，產品限量 999 支，這把應該是 917 號</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-1dfc71de5b.jpg"><p>K50W 鍵盤的中間有穿孔，這個早期是避免飲料潑灑到鍵盤，液體滲入電路板做的最基礎保護，看來是完全沿用舊版的模組復刻了這把鍵盤</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-2930c39ba2.jpg"><p>不過鍵盤還是作出了些許的差異，原有的透光鍵帽因為改為非透光的鍵盤，所以鍵帽全部都改為不透光鍵帽，手感上對我來說透光鍵帽有種特殊的平滑感，K50W Plus 在打感上多了阻滑感，有點類似 PBT 的不平滑表面，打起來更有手感。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-130efdc661.jpg"><p>鍵盤右側 ALT ，也從原本的 WIN改為 FN，增加了更多功能鍵的設計，鍵盤六塊肌上方三鍵改為音量控制，配合 FN 的組合為</p><ul><li>Fn + Insert ：音量靜音</li><li>Fn + Home：音量減</li><li>Fn + PgUp：音量加</li></ul><p>F9~12 也多了 Fn 組合多媒體鍵：</p><ul><li>Fn+ F9：播放 / 暫停</li><li>Fn+ F10：上一首</li><li>Fn+ F11：停止</li><li>Fn+ F12：下一首</li></ul><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-aa86c4799b.jpg"><p>另外原本右側上方原先為音量控制也改為巨集鍵控制，原本經典的變速也因為時代的轉變 PS/2 介面的消失，改為比較純樸的 Fn+ ESC 鎖定鍵盤指示燈，當燈號亮起就會鎖定整把鍵盤按鍵輸入，避免誤觸。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0ca58bff49.jpg"><p>K50M Plus 的經典造型，加上相當有特色的黑橘色配色設計，在電腦桌上使用實在是相當的搶眼，高腳位表現出來的輸入手感，真的一點都不輸給機械式鍵盤，如果你習慣輸入茶軸，需要一點回彈的手感，高腳位的剪刀腳可以帶給你十足的回彈阻力感，快觸底的時候會透過薄膜鍵盤的橡膠導套給予特殊的卡頓Q彈手感，剪刀腳提供相當穩定的鍵帽穩定度，不會歪斜的輸入手感真的是機械式鍵盤難以輕易達成的手感效果。</p><p><a href="https://www.i-rocks.com.tw/web/service/download.jsp?lang=tw">IROCKS 官網</a>還提供了應用軟體可以下載，可以讓你編輯鍵盤上 P1~P4 的巨集</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-481fc417bf.jpg"><p>應用軟體啟動後可以看到鍵盤的 LAYOUT，匯出匯入設定，P1~P4 的巨集設定</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-e2b3b6dc91.jpg"><p>巨集管理可以讓你錄製所需錄製的俺鍵順序，或是簡單的使用組合鍵紀錄，執行應用程式、多媒體設置等選項</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-3c2e3af809.jpg"><p>巨集錄製可以調整你鍵盤鍵入的順序，可調整紀錄設計延遲等功能</p><p>K50W Plus 高腳位薄膜鍵盤，這把紀念款鍵盤，不單單只是紀念廠商成立周年的產品，經典造型的輸入裝置才是讓人愛不釋手的主因，機械式鍵盤最早以前也只是單純的輸入工具，這幾年才有相當不一樣的發展。薄膜式鍵盤的出現不單單只是讓可攜式電腦可以減少尺寸，薄膜加上剪刀腳的設計，也讓平價鍵盤有了相當優秀的輸入手感，一點都不輸機械式鍵盤，每一個按鍵的手感都有相當一致性的表現。</p><p>想要收藏這把鍵盤的朋友，要快緊腳步收藏了，手腳慢了就沒了</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/i-rocks">i-rocks</a><a href="https://mesak.tw/tag/membrane-keyboard">薄膜鍵盤</a><a href="https://mesak.tw/tag/keyboards">鍵盤</a></div></div>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6a16f148f3.jpg"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6a16f148f3.jpg" medium="image"/>
    <pubDate>Sun, 13 Aug 2023 07:31:02 +0000</pubDate>
  </item><item>
    <title><![CDATA[[開發] 利用 Docker 快速建立 PHP Laravel LINEBOT 機器人開發環境]]></title>
    <link>https://mesak.tw/code/php/11937/build-linebot-with-laravel</link>
    <itunes:title><![CDATA[[開發] 利用 Docker 快速建立 PHP Laravel LINEBOT 機器人開發環境]]></itunes:title>
    <itunes:author><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[<div><p>現代開發環境不得不說，只需要下幾行指令之後，開發環境就隨之建立，Windows 自從 Windows 10 推出之後，利用WSL 子系統模式來執行 Linux ， 近年來流行的 Docker 也快速的發展，利用系統層虛擬化，讓開發環境與正式環境相當的貼近。</p><p>在開發專案的時候相當推薦採用 統一的 Docker 環境來處理這些環境架設的問題，減少各個系統的問題處理，統一函示庫元件之類的套件載入方法，推薦使用 Docker 。</p><p>今天要介紹的就是利用 Laravel 官方推出的 Laravel Sail ，配合我最近整合的 LINEBOT套件，快速的建立起開發環境。</p><p>首先需要作業系統為 Windows 10 1909 以上，並安裝 WSL2 ，Windows 作業系統的部分我就不再贅述</p><p>透過官方的<a href="https://laravel.com/docs/9.x/installation#getting-started-on-windows">教學文件 </a>Getting Started On Windows，你還需要安裝 <a href="https://www.docker.com/products/docker-desktop/">Docker Desktop</a>，萬事都備妥了之後，你需要打開<strong>命令提示字元</strong>，按下 WIN+R 輸入 CMD，或是直接執行命令提示字元</p><p>輸入</p><pre><code>wsl</code></pre><p>接著會跳入 wsl 子系統</p><p>進入你想要的目錄，輸入</p><pre><code>cd ~</code></pre><p>會進入 home 目錄中，如果會一點 linux command  指令可以建立自己的資料夾位置放置，接著輸入</p><pre><code>curl -s https://laravel.build/linebot-app | bash</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f619d33ea3.jpg"><p>其中 linebot-app 這字串是你自己可以自由跟動的專案名稱，輸入完畢之後，整個 laravel 9 的專案就開始建立了。</p><p>接著專案自己會開始下載整包新的 laravel，等系統 pull 完畢就可以了</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0555c500a9.jpg"><p>等下載</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-15ba5dd59f.jpg"><p>過程中可以看到 用指令文字組成的 LARAVEL 字樣</p><p>下載完畢之後，依據你的專案名稱，進入該目錄，接著啟用 DOCKER 映像檔打包成容器</p><pre><code>cd linebot-app</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6ab9cd0b47.jpg"><p>輸入 <a href="https://laravel.com/docs/9.x/sail#configuring-a-shell-alias">Laravel sail </a>指令，這段其實等同 docker-compose up -d ，只是 sail 專案包覆了指令</p><pre><code>./vendor/bin/sail up -d</code></pre><p>sail 會是之後調用環境需要啟用的指令，如果需要常輸入可以利用 <a href="https://linux.vbird.org/linux_basic/mandrake9/0320bash.php#aliascommand">alias</a> 的方式輸入</p><pre><code>alias sail='[ -f sail ] &amp;&amp; sh sail || sh vendor/bin/sail'</code></pre><p>編輯 &nbsp;<code>~/.bashrc</code> ，如此一來就會常駐在系統中，後面範例都將會省去 sail 位置指令</p><p>接著安裝 <a href="https://github.com/mesak/laravel-linebot">mesak/laravel-linebot</a> 套件，輸入</p><pre><code>sail composer require mesak/laravel-linebot</code></pre><p>安裝完畢之後依序輸入</p><pre><code>
sail artisan vendor:publish --tag=mesak-linebot.config
sail artisan vendor:publish --tag=mesak-linebot.listener</code></pre><p>兩個檔案的輸出，分別是 config 設定檔，以及 listener 事件處理。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-53290bce0a.jpg"><p>listener 會將檔案輸出到&nbsp;app\Listeners 下，產生 LineBotListener.php 檔案，因此需要直接進入 config/linebot.php 去修改 listener  位置，如圖，將 listener  修改或是註解，改為新的位置 ‘App\Listeners\LineBotListener’</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f49f3c98a9.jpg"><p>&nbsp;app\Listeners\LineBotListener.php 這支檔案，就在這邊定義 LINEBOT 接收到的訊息，如果需要回傳文字，就直接 return 就可以處理了，如果你會 <a href="https://developers.line.biz/en/docs/messaging-api/using-flex-messages/">Flex Messages </a>，只需要把回覆內容利用 Array 方式回傳，如產生中的 raw 指令一樣。</p><h2>申請 LINEBOT</h2><p>首先進入 LINE 的 開發者網站，點選<a href="https://developers.line.biz/zh-hant/services/messaging-api/"> Message API</a>，登入個人帳號之後就可以申請 LINEBOT</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d37cd6cb63.jpg"><p>接著在你申請的機器人頁面中，找到<strong> Channel ID</strong>，以及 <strong>Channel secret</strong> 兩個設定值，記住不要外洩出去，這兩個數值就可以產生 TOKEN 來與機器人互動，開啟根目錄下的 .env ，在最末段加入你的 ID 跟 SECRET</p><pre><code>LINE_CLIENT_ID=xxxxxxxx
LINE_CLIENT_SECRET=xxxxxxxx</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0e678eb343.jpg"><p>接著最後一段就是在路由開啟機器人的對接，根目錄的 routes/api.php 裡面追加一段</p><pre><code>use Illuminate\Http\Request;
Route::post('/line', function (Request $request) {
return \Facades\Mesak\LineBot\Contracts\Bot::handle($request);
});</code></pre><p>基礎設定就大功告成，接著要讓 LINE 連線到你的機器來作動</p><p>接著必須要下載 <a href="https://ngrok.com/">ngrok </a>沒用過的朋友可能要去看一下教學，這邊就不贅述</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ec74dfbbb1.jpg"><p>ngrok 要架設在 wsl 或是 windows 裡面都可以，我個人是架設在 windows 裡面，所以指定位置之後 輸入</p><pre><code>ngrok http 80</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-76869b29f3.jpg"><p>當你 ngrok 都設定好的時候，就會跳出對外網址，Forwarding，理論上滑鼠可以點，點開他用瀏覽器查看，順便複製網址準備填入 LINE</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-26a59880c5.jpg"><p>由於我們是放在 api 路由上，把網址尾段加上 api/line，接著進入 LINE &gt; messaging-api 分頁，把 Webhook URL 這邊填入 <strong>ngrok網址</strong>/api/line</p><p>加入機器人，看機器人有沒有回應你，輸入預設三個指令測試 hi、hello、raw ，都有出現東西的話機器人就連接完畢了。</p><p>整理一下步驟</p><pre><code>安裝 WSL
安裝 DOCKER DESKTOP
指令輸入 wsl
選擇一個位置 例如 cd ~
curl -s https://laravel.build/linebot-app | bash
cd linebot-app
./vendor/bin/sail up -d
alias sail='[ -f sail ] &amp;&amp; sh sail || sh vendor/bin/sail'
sail composer require mesak/laravel-linebot
sail artisan vendor:publish --tag=mesak-linebot.config
sail artisan vendor:publish --tag=mesak-linebot.listener
申請 LINEBOT 機器人取得 <strong>Channel ID</strong>，以及 <strong>Channel secret</strong>
修改 .env
修改路由，增加 function
use Illuminate\Http\Request;
Route::post('/line', function (Request $request) {
return \Facades\Mesak\LineBot\Contracts\Bot::handle($request);
});
安裝 ngrok
LINE 網頁中填入 Webhook URL 網址：{url}api/line
加入機器人測試</code></pre><p>套件目前可以正常對應運作，但是未正式發布，因為對應的動作太少，等到 1.0.0 發布之後可能要移除套件之後再安裝，避免版本鎖定</p><p>以上步驟可以簡單快速建立一個 PHP 的開發環境，注意是<strong>開發</strong>喔，正式機環境可能還要學習一下部屬專案的流程，另外 LINEBOT 回應皆採用 <a href="https://laravel.com/docs/9.x/events#queued-event-listeners">Queued Event Listeners</a>，如果未來 env 的 <a href="https://laravel.com/docs/9.x/queues#driver-prerequisites">QUEUE_CONNECTION</a> 參數 從 sync 改為 database，就會需要 woker 來處理，後續有套件上的問題，歡迎發 PR 給我或是提 issue</p><ul><li><a href="https://github.com/mesak/laravel-linebot">https://github.com/mesak/laravel-linebot</a></li></ul><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/docker">docker</a><a href="https://mesak.tw/tag/laravel">laravel</a><a href="https://mesak.tw/tag/line">line</a><a href="https://mesak.tw/tag/linebot">linebot</a><a href="https://mesak.tw/tag/php">php</a></div></div>]]>
    </itunes:summary>
    <description>
      <![CDATA[<div><p>現代開發環境不得不說，只需要下幾行指令之後，開發環境就隨之建立，Windows 自從 Windows 10 推出之後，利用WSL 子系統模式來執行 Linux ， 近年來流行的 Docker 也快速的發展，利用系統層虛擬化，讓開發環境與正式環境相當的貼近。</p><p>在開發專案的時候相當推薦採用 統一的 Docker 環境來處理這些環境架設的問題，減少各個系統的問題處理，統一函示庫元件之類的套件載入方法，推薦使用 Docker 。</p><p>今天要介紹的就是利用 Laravel 官方推出的 Laravel Sail ，配合我最近整合的 LINEBOT套件，快速的建立起開發環境。</p><p>首先需要作業系統為 Windows 10 1909 以上，並安裝 WSL2 ，Windows 作業系統的部分我就不再贅述</p><p>透過官方的<a href="https://laravel.com/docs/9.x/installation#getting-started-on-windows">教學文件 </a>Getting Started On Windows，你還需要安裝 <a href="https://www.docker.com/products/docker-desktop/">Docker Desktop</a>，萬事都備妥了之後，你需要打開<strong>命令提示字元</strong>，按下 WIN+R 輸入 CMD，或是直接執行命令提示字元</p><p>輸入</p><pre><code>wsl</code></pre><p>接著會跳入 wsl 子系統</p><p>進入你想要的目錄，輸入</p><pre><code>cd ~</code></pre><p>會進入 home 目錄中，如果會一點 linux command  指令可以建立自己的資料夾位置放置，接著輸入</p><pre><code>curl -s https://laravel.build/linebot-app | bash</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f619d33ea3.jpg"><p>其中 linebot-app 這字串是你自己可以自由跟動的專案名稱，輸入完畢之後，整個 laravel 9 的專案就開始建立了。</p><p>接著專案自己會開始下載整包新的 laravel，等系統 pull 完畢就可以了</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0555c500a9.jpg"><p>等下載</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-15ba5dd59f.jpg"><p>過程中可以看到 用指令文字組成的 LARAVEL 字樣</p><p>下載完畢之後，依據你的專案名稱，進入該目錄，接著啟用 DOCKER 映像檔打包成容器</p><pre><code>cd linebot-app</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6ab9cd0b47.jpg"><p>輸入 <a href="https://laravel.com/docs/9.x/sail#configuring-a-shell-alias">Laravel sail </a>指令，這段其實等同 docker-compose up -d ，只是 sail 專案包覆了指令</p><pre><code>./vendor/bin/sail up -d</code></pre><p>sail 會是之後調用環境需要啟用的指令，如果需要常輸入可以利用 <a href="https://linux.vbird.org/linux_basic/mandrake9/0320bash.php#aliascommand">alias</a> 的方式輸入</p><pre><code>alias sail='[ -f sail ] &amp;&amp; sh sail || sh vendor/bin/sail'</code></pre><p>編輯 &nbsp;<code>~/.bashrc</code> ，如此一來就會常駐在系統中，後面範例都將會省去 sail 位置指令</p><p>接著安裝 <a href="https://github.com/mesak/laravel-linebot">mesak/laravel-linebot</a> 套件，輸入</p><pre><code>sail composer require mesak/laravel-linebot</code></pre><p>安裝完畢之後依序輸入</p><pre><code>
sail artisan vendor:publish --tag=mesak-linebot.config
sail artisan vendor:publish --tag=mesak-linebot.listener</code></pre><p>兩個檔案的輸出，分別是 config 設定檔，以及 listener 事件處理。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-53290bce0a.jpg"><p>listener 會將檔案輸出到&nbsp;app\Listeners 下，產生 LineBotListener.php 檔案，因此需要直接進入 config/linebot.php 去修改 listener  位置，如圖，將 listener  修改或是註解，改為新的位置 ‘App\Listeners\LineBotListener’</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f49f3c98a9.jpg"><p>&nbsp;app\Listeners\LineBotListener.php 這支檔案，就在這邊定義 LINEBOT 接收到的訊息，如果需要回傳文字，就直接 return 就可以處理了，如果你會 <a href="https://developers.line.biz/en/docs/messaging-api/using-flex-messages/">Flex Messages </a>，只需要把回覆內容利用 Array 方式回傳，如產生中的 raw 指令一樣。</p><h2>申請 LINEBOT</h2><p>首先進入 LINE 的 開發者網站，點選<a href="https://developers.line.biz/zh-hant/services/messaging-api/"> Message API</a>，登入個人帳號之後就可以申請 LINEBOT</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d37cd6cb63.jpg"><p>接著在你申請的機器人頁面中，找到<strong> Channel ID</strong>，以及 <strong>Channel secret</strong> 兩個設定值，記住不要外洩出去，這兩個數值就可以產生 TOKEN 來與機器人互動，開啟根目錄下的 .env ，在最末段加入你的 ID 跟 SECRET</p><pre><code>LINE_CLIENT_ID=xxxxxxxx
LINE_CLIENT_SECRET=xxxxxxxx</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0e678eb343.jpg"><p>接著最後一段就是在路由開啟機器人的對接，根目錄的 routes/api.php 裡面追加一段</p><pre><code>use Illuminate\Http\Request;
Route::post('/line', function (Request $request) {
return \Facades\Mesak\LineBot\Contracts\Bot::handle($request);
});</code></pre><p>基礎設定就大功告成，接著要讓 LINE 連線到你的機器來作動</p><p>接著必須要下載 <a href="https://ngrok.com/">ngrok </a>沒用過的朋友可能要去看一下教學，這邊就不贅述</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ec74dfbbb1.jpg"><p>ngrok 要架設在 wsl 或是 windows 裡面都可以，我個人是架設在 windows 裡面，所以指定位置之後 輸入</p><pre><code>ngrok http 80</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-76869b29f3.jpg"><p>當你 ngrok 都設定好的時候，就會跳出對外網址，Forwarding，理論上滑鼠可以點，點開他用瀏覽器查看，順便複製網址準備填入 LINE</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-26a59880c5.jpg"><p>由於我們是放在 api 路由上，把網址尾段加上 api/line，接著進入 LINE &gt; messaging-api 分頁，把 Webhook URL 這邊填入 <strong>ngrok網址</strong>/api/line</p><p>加入機器人，看機器人有沒有回應你，輸入預設三個指令測試 hi、hello、raw ，都有出現東西的話機器人就連接完畢了。</p><p>整理一下步驟</p><pre><code>安裝 WSL
安裝 DOCKER DESKTOP
指令輸入 wsl
選擇一個位置 例如 cd ~
curl -s https://laravel.build/linebot-app | bash
cd linebot-app
./vendor/bin/sail up -d
alias sail='[ -f sail ] &amp;&amp; sh sail || sh vendor/bin/sail'
sail composer require mesak/laravel-linebot
sail artisan vendor:publish --tag=mesak-linebot.config
sail artisan vendor:publish --tag=mesak-linebot.listener
申請 LINEBOT 機器人取得 <strong>Channel ID</strong>，以及 <strong>Channel secret</strong>
修改 .env
修改路由，增加 function
use Illuminate\Http\Request;
Route::post('/line', function (Request $request) {
return \Facades\Mesak\LineBot\Contracts\Bot::handle($request);
});
安裝 ngrok
LINE 網頁中填入 Webhook URL 網址：{url}api/line
加入機器人測試</code></pre><p>套件目前可以正常對應運作，但是未正式發布，因為對應的動作太少，等到 1.0.0 發布之後可能要移除套件之後再安裝，避免版本鎖定</p><p>以上步驟可以簡單快速建立一個 PHP 的開發環境，注意是<strong>開發</strong>喔，正式機環境可能還要學習一下部屬專案的流程，另外 LINEBOT 回應皆採用 <a href="https://laravel.com/docs/9.x/events#queued-event-listeners">Queued Event Listeners</a>，如果未來 env 的 <a href="https://laravel.com/docs/9.x/queues#driver-prerequisites">QUEUE_CONNECTION</a> 參數 從 sync 改為 database，就會需要 woker 來處理，後續有套件上的問題，歡迎發 PR 給我或是提 issue</p><ul><li><a href="https://github.com/mesak/laravel-linebot">https://github.com/mesak/laravel-linebot</a></li></ul><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/docker">docker</a><a href="https://mesak.tw/tag/laravel">laravel</a><a href="https://mesak.tw/tag/line">line</a><a href="https://mesak.tw/tag/linebot">linebot</a><a href="https://mesak.tw/tag/php">php</a></div></div>]]>
    </description>
    <content:encoded><![CDATA[<div><p>現代開發環境不得不說，只需要下幾行指令之後，開發環境就隨之建立，Windows 自從 Windows 10 推出之後，利用WSL 子系統模式來執行 Linux ， 近年來流行的 Docker 也快速的發展，利用系統層虛擬化，讓開發環境與正式環境相當的貼近。</p><p>在開發專案的時候相當推薦採用 統一的 Docker 環境來處理這些環境架設的問題，減少各個系統的問題處理，統一函示庫元件之類的套件載入方法，推薦使用 Docker 。</p><p>今天要介紹的就是利用 Laravel 官方推出的 Laravel Sail ，配合我最近整合的 LINEBOT套件，快速的建立起開發環境。</p><p>首先需要作業系統為 Windows 10 1909 以上，並安裝 WSL2 ，Windows 作業系統的部分我就不再贅述</p><p>透過官方的<a href="https://laravel.com/docs/9.x/installation#getting-started-on-windows">教學文件 </a>Getting Started On Windows，你還需要安裝 <a href="https://www.docker.com/products/docker-desktop/">Docker Desktop</a>，萬事都備妥了之後，你需要打開<strong>命令提示字元</strong>，按下 WIN+R 輸入 CMD，或是直接執行命令提示字元</p><p>輸入</p><pre><code>wsl</code></pre><p>接著會跳入 wsl 子系統</p><p>進入你想要的目錄，輸入</p><pre><code>cd ~</code></pre><p>會進入 home 目錄中，如果會一點 linux command  指令可以建立自己的資料夾位置放置，接著輸入</p><pre><code>curl -s https://laravel.build/linebot-app | bash</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f619d33ea3.jpg"><p>其中 linebot-app 這字串是你自己可以自由跟動的專案名稱，輸入完畢之後，整個 laravel 9 的專案就開始建立了。</p><p>接著專案自己會開始下載整包新的 laravel，等系統 pull 完畢就可以了</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0555c500a9.jpg"><p>等下載</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-15ba5dd59f.jpg"><p>過程中可以看到 用指令文字組成的 LARAVEL 字樣</p><p>下載完畢之後，依據你的專案名稱，進入該目錄，接著啟用 DOCKER 映像檔打包成容器</p><pre><code>cd linebot-app</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-6ab9cd0b47.jpg"><p>輸入 <a href="https://laravel.com/docs/9.x/sail#configuring-a-shell-alias">Laravel sail </a>指令，這段其實等同 docker-compose up -d ，只是 sail 專案包覆了指令</p><pre><code>./vendor/bin/sail up -d</code></pre><p>sail 會是之後調用環境需要啟用的指令，如果需要常輸入可以利用 <a href="https://linux.vbird.org/linux_basic/mandrake9/0320bash.php#aliascommand">alias</a> 的方式輸入</p><pre><code>alias sail='[ -f sail ] &amp;&amp; sh sail || sh vendor/bin/sail'</code></pre><p>編輯 &nbsp;<code>~/.bashrc</code> ，如此一來就會常駐在系統中，後面範例都將會省去 sail 位置指令</p><p>接著安裝 <a href="https://github.com/mesak/laravel-linebot">mesak/laravel-linebot</a> 套件，輸入</p><pre><code>sail composer require mesak/laravel-linebot</code></pre><p>安裝完畢之後依序輸入</p><pre><code>
sail artisan vendor:publish --tag=mesak-linebot.config
sail artisan vendor:publish --tag=mesak-linebot.listener</code></pre><p>兩個檔案的輸出，分別是 config 設定檔，以及 listener 事件處理。</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-53290bce0a.jpg"><p>listener 會將檔案輸出到&nbsp;app\Listeners 下，產生 LineBotListener.php 檔案，因此需要直接進入 config/linebot.php 去修改 listener  位置，如圖，將 listener  修改或是註解，改為新的位置 ‘App\Listeners\LineBotListener’</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f49f3c98a9.jpg"><p>&nbsp;app\Listeners\LineBotListener.php 這支檔案，就在這邊定義 LINEBOT 接收到的訊息，如果需要回傳文字，就直接 return 就可以處理了，如果你會 <a href="https://developers.line.biz/en/docs/messaging-api/using-flex-messages/">Flex Messages </a>，只需要把回覆內容利用 Array 方式回傳，如產生中的 raw 指令一樣。</p><h2>申請 LINEBOT</h2><p>首先進入 LINE 的 開發者網站，點選<a href="https://developers.line.biz/zh-hant/services/messaging-api/"> Message API</a>，登入個人帳號之後就可以申請 LINEBOT</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d37cd6cb63.jpg"><p>接著在你申請的機器人頁面中，找到<strong> Channel ID</strong>，以及 <strong>Channel secret</strong> 兩個設定值，記住不要外洩出去，這兩個數值就可以產生 TOKEN 來與機器人互動，開啟根目錄下的 .env ，在最末段加入你的 ID 跟 SECRET</p><pre><code>LINE_CLIENT_ID=xxxxxxxx
LINE_CLIENT_SECRET=xxxxxxxx</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-0e678eb343.jpg"><p>接著最後一段就是在路由開啟機器人的對接，根目錄的 routes/api.php 裡面追加一段</p><pre><code>use Illuminate\Http\Request;
Route::post('/line', function (Request $request) {
return \Facades\Mesak\LineBot\Contracts\Bot::handle($request);
});</code></pre><p>基礎設定就大功告成，接著要讓 LINE 連線到你的機器來作動</p><p>接著必須要下載 <a href="https://ngrok.com/">ngrok </a>沒用過的朋友可能要去看一下教學，這邊就不贅述</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-ec74dfbbb1.jpg"><p>ngrok 要架設在 wsl 或是 windows 裡面都可以，我個人是架設在 windows 裡面，所以指定位置之後 輸入</p><pre><code>ngrok http 80</code></pre><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-76869b29f3.jpg"><p>當你 ngrok 都設定好的時候，就會跳出對外網址，Forwarding，理論上滑鼠可以點，點開他用瀏覽器查看，順便複製網址準備填入 LINE</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-26a59880c5.jpg"><p>由於我們是放在 api 路由上，把網址尾段加上 api/line，接著進入 LINE &gt; messaging-api 分頁，把 Webhook URL 這邊填入 <strong>ngrok網址</strong>/api/line</p><p>加入機器人，看機器人有沒有回應你，輸入預設三個指令測試 hi、hello、raw ，都有出現東西的話機器人就連接完畢了。</p><p>整理一下步驟</p><pre><code>安裝 WSL
安裝 DOCKER DESKTOP
指令輸入 wsl
選擇一個位置 例如 cd ~
curl -s https://laravel.build/linebot-app | bash
cd linebot-app
./vendor/bin/sail up -d
alias sail='[ -f sail ] &amp;&amp; sh sail || sh vendor/bin/sail'
sail composer require mesak/laravel-linebot
sail artisan vendor:publish --tag=mesak-linebot.config
sail artisan vendor:publish --tag=mesak-linebot.listener
申請 LINEBOT 機器人取得 <strong>Channel ID</strong>，以及 <strong>Channel secret</strong>
修改 .env
修改路由，增加 function
use Illuminate\Http\Request;
Route::post('/line', function (Request $request) {
return \Facades\Mesak\LineBot\Contracts\Bot::handle($request);
});
安裝 ngrok
LINE 網頁中填入 Webhook URL 網址：{url}api/line
加入機器人測試</code></pre><p>套件目前可以正常對應運作，但是未正式發布，因為對應的動作太少，等到 1.0.0 發布之後可能要移除套件之後再安裝，避免版本鎖定</p><p>以上步驟可以簡單快速建立一個 PHP 的開發環境，注意是<strong>開發</strong>喔，正式機環境可能還要學習一下部屬專案的流程，另外 LINEBOT 回應皆採用 <a href="https://laravel.com/docs/9.x/events#queued-event-listeners">Queued Event Listeners</a>，如果未來 env 的 <a href="https://laravel.com/docs/9.x/queues#driver-prerequisites">QUEUE_CONNECTION</a> 參數 從 sync 改為 database，就會需要 woker 來處理，後續有套件上的問題，歡迎發 PR 給我或是提 issue</p><ul><li><a href="https://github.com/mesak/laravel-linebot">https://github.com/mesak/laravel-linebot</a></li></ul><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/docker">docker</a><a href="https://mesak.tw/tag/laravel">laravel</a><a href="https://mesak.tw/tag/line">line</a><a href="https://mesak.tw/tag/linebot">linebot</a><a href="https://mesak.tw/tag/php">php</a></div></div>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f619d33ea3.jpg"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-f619d33ea3.jpg" medium="image"/>
    <pubDate>Fri, 17 Feb 2023 01:00:00 +0000</pubDate>
  </item><item>
    <title><![CDATA[[JS] Table 轉 Object 練習 part2]]></title>
    <link>https://mesak.tw/code/javascript/11933/js-table-convert-to-object-part2</link>
    <itunes:title><![CDATA[[JS] Table 轉 Object 練習 part2]]></itunes:title>
    <itunes:author><![CDATA[米薩克 聊 3C[RSS+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[<div><p>前情提要? <a href="https://mesak.tw/code/javascript/11932/js-table-convert-to-object-part1">上一篇</a>實作方法利用了三個迴圈，取得標題，將標題的資料利用索引(index) 抓取表格的內容，</p><p>程式碼如下：</p><pre><code>let headData = Array.from(document.querySelectorAll('thead &gt; tr &gt; th')).map(n=&gt;n.innerText)
console.log('headData', headData )
let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
let data = {};
Array.from(trNode.querySelectorAll('td')).forEach((n , index)=&gt;{
data[ headData[index] ] = n.innerText
})
tableObject.push(data)
}
console.log( 'tableObject ',tableObject )</code></pre><p>其中內容可以看到，第二段的地方，所跑的迴圈是針對 td 來做處理，headData 的部分其實也是針對 tr 下的 欄位去做處理，以前針對 XHTML 有稍微看一下規範，在標準的 HTML 結構下 TABLE 的子節點必須是 caption,colgroup,thead,tbody,tr 幾種節點，tr 這個節點下也只能有 th 跟 td 在這個標準規範下，我們理論上可以信任瀏覽器會解析這些元素來使用</p><p>所以現在要做的事情就是 拿出 tr 下的 子節點，在查詢 MDN 文件的時候，可以看到文件底部有一個 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#specifications">Specifications</a> ，引導到 html.spec 網站去，這網站制定了 HTML 的規則，在這邊可以查到標準的文件，雖然很難閱讀…</p><p>不過我利用 console.dir( 把 trNode) 給印出來，比照規格書發現了 tr.cells 的屬性，裡面放了允許的子元素 th跟td ，而且也不分標籤內容，因此這邊就可以快速的簡化 tr 下的目標</p><pre><code>let headData = Array.from(document.querySelector('thead &gt; tr').cells).map(n=&gt;n.innerText)</code></pre><p>這樣標題乍看沒太大改變，但實際上後面會有另外的用途</p><pre><code>let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
console.dir(trNode)
let tdData = Array.from(trNode.cells).map(n=&gt;n.innerText)
tableObject.push(tdData)
}</code></pre><p>第二段把 td的所有資料轉成跟 headData的類型一樣，的陣列數值，這樣兩個方法就做一樣的事情，後面就可以一併簡化</p><p>但是 tdData 要如何把陣列加入 KEY 變成物件 push 到 tableObject 呢？google “<strong>陣列轉換為物件</strong>” 可以找到一個 方法 reduce ，reduce 一開始有點難以理解，這邊推薦一個小工具 <a href="https://pythontutor.com">https://pythontutor.com</a> ，連進去貼上一個簡單的範例，</p><pre><code>let head = ["Company","Contact","Country"];
let data = [
[1,2,3],
[4,5,6]
];
data.forEach( (oneRaw) =&gt; {
let s = oneRaw.reduce( (newData,itemData)=&gt;{
console.log( newData,itemData )
return newData
},{})
console.log(s)
})</code></pre><p>這段程式碼最大化模擬運作的變數變化數值等等資料，基本上就是 123 本身是一個陣列，對應 td 的資料，456 亦同，123跟456都屬於另一個變數 data 二維陣列中的陣列，所以把他們跑過一次，根據 console.log 的顯示結果 newData 會根據 return 一直傳遞到下一個 newData，itemData，會傳遞他的陣列中的數值，<a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce">reduce </a>在傳遞的時候有三個參數值，可以利用這個參數值取得目前 array 的 index 數值，所以要讓他可以動的程式碼如下：</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-159dec0acb.png"><pre><code>let head = ["Company","Contact","Country"];
let data = [
[1,2,3],
[4,5,6]
];
data.forEach( (oneRaw) =&gt; {
let s = oneRaw.reduce( (newData,itemData,index)=&gt;{
newData[ head[index] ] = itemData
return newData
},{})
console.log(s)
})</code></pre><p>一樣 給索引值之後利用 head 的 value 當成 key值，最後給予 數值</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d9c1c8d0ba.png"><p>測試完了以後就可以引用到程式碼中</p><pre><code>let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
console.dir(trNode)
let tdData = Array.from(trNode.cells).map(n=&gt;n.innerText)
let tdItem =  oneRaw.reduce( (newData,itemData,index)=&gt;{
newData[ head[index] ] = itemData
return newData
},{})
tableObject.push(tdItem )
}</code></pre>  <p>剛剛有提到兩個重複的 function 方法我們可以合併一下內容，最後把不需要的變數整理一下</p><pre><code>function trNodeToArray( trNode ){
return Array.from(trNode.cells).map(n=&gt;n.innerText)
}
let headData = trNodeToArray( document.querySelector('thead &gt; tr') )
console.log('headData', headData )
let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
console.dir(trNode)
let tdData = trNodeToArray(trNode).reduce( (newData,itemData,index)=&gt;{
newData[ headData[index] ] = itemData
return newData
},{})
tableObject.push( tdData )
}
console.log( 'tableObject ',tableObject )</code></pre><p>最後雖然把一樣的方法抽離出來了，但是看起來很怪，如何能確定 抽離出來使用這個 trNodeToArray 的物件塞入的參數就是 tr 節點呢？這個時候就需要原型鏈的用法…</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/tag-javascript">javascript</a></div></div>]]>
    </itunes:summary>
    <description>
      <![CDATA[<div><p>前情提要? <a href="https://mesak.tw/code/javascript/11932/js-table-convert-to-object-part1">上一篇</a>實作方法利用了三個迴圈，取得標題，將標題的資料利用索引(index) 抓取表格的內容，</p><p>程式碼如下：</p><pre><code>let headData = Array.from(document.querySelectorAll('thead &gt; tr &gt; th')).map(n=&gt;n.innerText)
console.log('headData', headData )
let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
let data = {};
Array.from(trNode.querySelectorAll('td')).forEach((n , index)=&gt;{
data[ headData[index] ] = n.innerText
})
tableObject.push(data)
}
console.log( 'tableObject ',tableObject )</code></pre><p>其中內容可以看到，第二段的地方，所跑的迴圈是針對 td 來做處理，headData 的部分其實也是針對 tr 下的 欄位去做處理，以前針對 XHTML 有稍微看一下規範，在標準的 HTML 結構下 TABLE 的子節點必須是 caption,colgroup,thead,tbody,tr 幾種節點，tr 這個節點下也只能有 th 跟 td 在這個標準規範下，我們理論上可以信任瀏覽器會解析這些元素來使用</p><p>所以現在要做的事情就是 拿出 tr 下的 子節點，在查詢 MDN 文件的時候，可以看到文件底部有一個 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#specifications">Specifications</a> ，引導到 html.spec 網站去，這網站制定了 HTML 的規則，在這邊可以查到標準的文件，雖然很難閱讀…</p><p>不過我利用 console.dir( 把 trNode) 給印出來，比照規格書發現了 tr.cells 的屬性，裡面放了允許的子元素 th跟td ，而且也不分標籤內容，因此這邊就可以快速的簡化 tr 下的目標</p><pre><code>let headData = Array.from(document.querySelector('thead &gt; tr').cells).map(n=&gt;n.innerText)</code></pre><p>這樣標題乍看沒太大改變，但實際上後面會有另外的用途</p><pre><code>let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
console.dir(trNode)
let tdData = Array.from(trNode.cells).map(n=&gt;n.innerText)
tableObject.push(tdData)
}</code></pre><p>第二段把 td的所有資料轉成跟 headData的類型一樣，的陣列數值，這樣兩個方法就做一樣的事情，後面就可以一併簡化</p><p>但是 tdData 要如何把陣列加入 KEY 變成物件 push 到 tableObject 呢？google “<strong>陣列轉換為物件</strong>” 可以找到一個 方法 reduce ，reduce 一開始有點難以理解，這邊推薦一個小工具 <a href="https://pythontutor.com">https://pythontutor.com</a> ，連進去貼上一個簡單的範例，</p><pre><code>let head = ["Company","Contact","Country"];
let data = [
[1,2,3],
[4,5,6]
];
data.forEach( (oneRaw) =&gt; {
let s = oneRaw.reduce( (newData,itemData)=&gt;{
console.log( newData,itemData )
return newData
},{})
console.log(s)
})</code></pre><p>這段程式碼最大化模擬運作的變數變化數值等等資料，基本上就是 123 本身是一個陣列，對應 td 的資料，456 亦同，123跟456都屬於另一個變數 data 二維陣列中的陣列，所以把他們跑過一次，根據 console.log 的顯示結果 newData 會根據 return 一直傳遞到下一個 newData，itemData，會傳遞他的陣列中的數值，<a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce">reduce </a>在傳遞的時候有三個參數值，可以利用這個參數值取得目前 array 的 index 數值，所以要讓他可以動的程式碼如下：</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-159dec0acb.png"><pre><code>let head = ["Company","Contact","Country"];
let data = [
[1,2,3],
[4,5,6]
];
data.forEach( (oneRaw) =&gt; {
let s = oneRaw.reduce( (newData,itemData,index)=&gt;{
newData[ head[index] ] = itemData
return newData
},{})
console.log(s)
})</code></pre><p>一樣 給索引值之後利用 head 的 value 當成 key值，最後給予 數值</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d9c1c8d0ba.png"><p>測試完了以後就可以引用到程式碼中</p><pre><code>let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
console.dir(trNode)
let tdData = Array.from(trNode.cells).map(n=&gt;n.innerText)
let tdItem =  oneRaw.reduce( (newData,itemData,index)=&gt;{
newData[ head[index] ] = itemData
return newData
},{})
tableObject.push(tdItem )
}</code></pre>  <p>剛剛有提到兩個重複的 function 方法我們可以合併一下內容，最後把不需要的變數整理一下</p><pre><code>function trNodeToArray( trNode ){
return Array.from(trNode.cells).map(n=&gt;n.innerText)
}
let headData = trNodeToArray( document.querySelector('thead &gt; tr') )
console.log('headData', headData )
let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
console.dir(trNode)
let tdData = trNodeToArray(trNode).reduce( (newData,itemData,index)=&gt;{
newData[ headData[index] ] = itemData
return newData
},{})
tableObject.push( tdData )
}
console.log( 'tableObject ',tableObject )</code></pre><p>最後雖然把一樣的方法抽離出來了，但是看起來很怪，如何能確定 抽離出來使用這個 trNodeToArray 的物件塞入的參數就是 tr 節點呢？這個時候就需要原型鏈的用法…</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/tag-javascript">javascript</a></div></div>]]>
    </description>
    <content:encoded><![CDATA[<div><p>前情提要? <a href="https://mesak.tw/code/javascript/11932/js-table-convert-to-object-part1">上一篇</a>實作方法利用了三個迴圈，取得標題，將標題的資料利用索引(index) 抓取表格的內容，</p><p>程式碼如下：</p><pre><code>let headData = Array.from(document.querySelectorAll('thead &gt; tr &gt; th')).map(n=&gt;n.innerText)
console.log('headData', headData )
let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
let data = {};
Array.from(trNode.querySelectorAll('td')).forEach((n , index)=&gt;{
data[ headData[index] ] = n.innerText
})
tableObject.push(data)
}
console.log( 'tableObject ',tableObject )</code></pre><p>其中內容可以看到，第二段的地方，所跑的迴圈是針對 td 來做處理，headData 的部分其實也是針對 tr 下的 欄位去做處理，以前針對 XHTML 有稍微看一下規範，在標準的 HTML 結構下 TABLE 的子節點必須是 caption,colgroup,thead,tbody,tr 幾種節點，tr 這個節點下也只能有 th 跟 td 在這個標準規範下，我們理論上可以信任瀏覽器會解析這些元素來使用</p><p>所以現在要做的事情就是 拿出 tr 下的 子節點，在查詢 MDN 文件的時候，可以看到文件底部有一個 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#specifications">Specifications</a> ，引導到 html.spec 網站去，這網站制定了 HTML 的規則，在這邊可以查到標準的文件，雖然很難閱讀…</p><p>不過我利用 console.dir( 把 trNode) 給印出來，比照規格書發現了 tr.cells 的屬性，裡面放了允許的子元素 th跟td ，而且也不分標籤內容，因此這邊就可以快速的簡化 tr 下的目標</p><pre><code>let headData = Array.from(document.querySelector('thead &gt; tr').cells).map(n=&gt;n.innerText)</code></pre><p>這樣標題乍看沒太大改變，但實際上後面會有另外的用途</p><pre><code>let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
console.dir(trNode)
let tdData = Array.from(trNode.cells).map(n=&gt;n.innerText)
tableObject.push(tdData)
}</code></pre><p>第二段把 td的所有資料轉成跟 headData的類型一樣，的陣列數值，這樣兩個方法就做一樣的事情，後面就可以一併簡化</p><p>但是 tdData 要如何把陣列加入 KEY 變成物件 push 到 tableObject 呢？google “<strong>陣列轉換為物件</strong>” 可以找到一個 方法 reduce ，reduce 一開始有點難以理解，這邊推薦一個小工具 <a href="https://pythontutor.com">https://pythontutor.com</a> ，連進去貼上一個簡單的範例，</p><pre><code>let head = ["Company","Contact","Country"];
let data = [
[1,2,3],
[4,5,6]
];
data.forEach( (oneRaw) =&gt; {
let s = oneRaw.reduce( (newData,itemData)=&gt;{
console.log( newData,itemData )
return newData
},{})
console.log(s)
})</code></pre><p>這段程式碼最大化模擬運作的變數變化數值等等資料，基本上就是 123 本身是一個陣列，對應 td 的資料，456 亦同，123跟456都屬於另一個變數 data 二維陣列中的陣列，所以把他們跑過一次，根據 console.log 的顯示結果 newData 會根據 return 一直傳遞到下一個 newData，itemData，會傳遞他的陣列中的數值，<a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce">reduce </a>在傳遞的時候有三個參數值，可以利用這個參數值取得目前 array 的 index 數值，所以要讓他可以動的程式碼如下：</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-159dec0acb.png"><pre><code>let head = ["Company","Contact","Country"];
let data = [
[1,2,3],
[4,5,6]
];
data.forEach( (oneRaw) =&gt; {
let s = oneRaw.reduce( (newData,itemData,index)=&gt;{
newData[ head[index] ] = itemData
return newData
},{})
console.log(s)
})</code></pre><p>一樣 給索引值之後利用 head 的 value 當成 key值，最後給予 數值</p><img data-lazyloaded="1" src="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-d9c1c8d0ba.png"><p>測試完了以後就可以引用到程式碼中</p><pre><code>let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
console.dir(trNode)
let tdData = Array.from(trNode.cells).map(n=&gt;n.innerText)
let tdItem =  oneRaw.reduce( (newData,itemData,index)=&gt;{
newData[ head[index] ] = itemData
return newData
},{})
tableObject.push(tdItem )
}</code></pre>  <p>剛剛有提到兩個重複的 function 方法我們可以合併一下內容，最後把不需要的變數整理一下</p><pre><code>function trNodeToArray( trNode ){
return Array.from(trNode.cells).map(n=&gt;n.innerText)
}
let headData = trNodeToArray( document.querySelector('thead &gt; tr') )
console.log('headData', headData )
let tableObject = []
for(let trNode of document.querySelectorAll('tbody &gt; tr') ){
console.dir(trNode)
let tdData = trNodeToArray(trNode).reduce( (newData,itemData,index)=&gt;{
newData[ headData[index] ] = itemData
return newData
},{})
tableObject.push( tdData )
}
console.log( 'tableObject ',tableObject )</code></pre><p>最後雖然把一樣的方法抽離出來了，但是看起來很怪，如何能確定 抽離出來使用這個 trNodeToArray 的物件塞入的參數就是 tr 節點呢？這個時候就需要原型鏈的用法…</p><div><h3><em>相關</em></h3></div><div>
<a href="https://mesak.tw/tag/tag-javascript">javascript</a></div></div>]]></content:encoded>
    <itunes:image href="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-159dec0acb.png"/>
          <media:content url="https://democwise2016.github.io/action-RSS-Fulltext/file-cache/mesak.tw-159dec0acb.png" medium="image"/>
    <pubDate>Wed, 11 Jan 2023 13:53:34 +0000</pubDate>
  </item></channel>
</rss>